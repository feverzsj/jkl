// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: benchmark_message1_proto2.proto

#include "benchmark_message1_proto2.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_benchmark_5fmessage1_5fproto2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GoogleMessage1SubMessage_benchmark_5fmessage1_5fproto2_2eproto;
namespace benchmarks {
namespace proto2 {
class GoogleMessage1DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GoogleMessage1> _instance;
} _GoogleMessage1_default_instance_;
class GoogleMessage1SubMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GoogleMessage1SubMessage> _instance;
} _GoogleMessage1SubMessage_default_instance_;
}  // namespace proto2
}  // namespace benchmarks
static void InitDefaultsscc_info_GoogleMessage1_benchmark_5fmessage1_5fproto2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::benchmarks::proto2::_GoogleMessage1_default_instance_;
    new (ptr) ::benchmarks::proto2::GoogleMessage1();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GoogleMessage1_benchmark_5fmessage1_5fproto2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GoogleMessage1_benchmark_5fmessage1_5fproto2_2eproto}, {
      &scc_info_GoogleMessage1SubMessage_benchmark_5fmessage1_5fproto2_2eproto.base,}};

static void InitDefaultsscc_info_GoogleMessage1SubMessage_benchmark_5fmessage1_5fproto2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::benchmarks::proto2::_GoogleMessage1SubMessage_default_instance_;
    new (ptr) ::benchmarks::proto2::GoogleMessage1SubMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GoogleMessage1SubMessage_benchmark_5fmessage1_5fproto2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GoogleMessage1SubMessage_benchmark_5fmessage1_5fproto2_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_benchmark_5fmessage1_5fproto2_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_benchmark_5fmessage1_5fproto2_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_benchmark_5fmessage1_5fproto2_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_benchmark_5fmessage1_5fproto2_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field1_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field9_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field18_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field80_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field81_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field2_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field3_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field280_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field6_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field22_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field4_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field5_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field59_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field7_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field16_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field130_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field12_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field17_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field13_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field14_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field104_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field100_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field101_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field102_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field103_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field29_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field30_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field60_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field271_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field272_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field150_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field23_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field24_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field25_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field15_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field78_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field67_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field68_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field128_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field129_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1, field131_),
  0,
  3,
  4,
  18,
  34,
  9,
  10,
  16,
  11,
  13,
  1,
  ~0u,
  19,
  2,
  12,
  29,
  35,
  36,
  37,
  33,
  27,
  25,
  26,
  5,
  6,
  17,
  20,
  38,
  39,
  32,
  31,
  14,
  21,
  15,
  8,
  24,
  22,
  23,
  28,
  7,
  30,
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field1_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field2_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field3_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field15_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field12_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field13_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field14_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field16_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field19_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field20_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field28_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field21_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field22_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field23_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field206_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field203_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field204_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field205_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field207_),
  PROTOBUF_FIELD_OFFSET(::benchmarks::proto2::GoogleMessage1SubMessage, field300_),
  2,
  3,
  4,
  0,
  17,
  6,
  7,
  5,
  16,
  18,
  19,
  8,
  9,
  10,
  11,
  12,
  13,
  1,
  14,
  15,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 46, sizeof(::benchmarks::proto2::GoogleMessage1)},
  { 87, 112, sizeof(::benchmarks::proto2::GoogleMessage1SubMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::benchmarks::proto2::_GoogleMessage1_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::benchmarks::proto2::_GoogleMessage1SubMessage_default_instance_),
};

const char descriptor_table_protodef_benchmark_5fmessage1_5fproto2_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037benchmark_message1_proto2.proto\022\021bench"
  "marks.proto2\"\201\007\n\016GoogleMessage1\022\016\n\006field"
  "1\030\001 \002(\t\022\016\n\006field9\030\t \001(\t\022\017\n\007field18\030\022 \001(\t"
  "\022\026\n\007field80\030P \001(\010:\005false\022\025\n\007field81\030Q \001("
  "\010:\004true\022\016\n\006field2\030\002 \002(\005\022\016\n\006field3\030\003 \002(\005\022"
  "\021\n\010field280\030\230\002 \001(\005\022\021\n\006field6\030\006 \001(\005:\0010\022\017\n"
  "\007field22\030\026 \001(\003\022\016\n\006field4\030\004 \001(\t\022\016\n\006field5"
  "\030\005 \003(\006\022\026\n\007field59\030; \001(\010:\005false\022\016\n\006field7"
  "\030\007 \001(\t\022\017\n\007field16\030\020 \001(\005\022\024\n\010field130\030\202\001 \001"
  "(\005:\0010\022\025\n\007field12\030\014 \001(\010:\004true\022\025\n\007field17\030"
  "\021 \001(\010:\004true\022\025\n\007field13\030\r \001(\010:\004true\022\025\n\007fi"
  "eld14\030\016 \001(\010:\004true\022\023\n\010field104\030h \001(\005:\0010\022\023"
  "\n\010field100\030d \001(\005:\0010\022\023\n\010field101\030e \001(\005:\0010"
  "\022\020\n\010field102\030f \001(\t\022\020\n\010field103\030g \001(\t\022\022\n\007"
  "field29\030\035 \001(\005:\0010\022\026\n\007field30\030\036 \001(\010:\005false"
  "\022\023\n\007field60\030< \001(\005:\002-1\022\025\n\010field271\030\217\002 \001(\005"
  ":\002-1\022\025\n\010field272\030\220\002 \001(\005:\002-1\022\021\n\010field150\030"
  "\226\001 \001(\005\022\022\n\007field23\030\027 \001(\005:\0010\022\026\n\007field24\030\030 "
  "\001(\010:\005false\022\022\n\007field25\030\031 \001(\005:\0010\022<\n\007field1"
  "5\030\017 \001(\0132+.benchmarks.proto2.GoogleMessag"
  "e1SubMessage\022\017\n\007field78\030N \001(\010\022\022\n\007field67"
  "\030C \001(\005:\0010\022\017\n\007field68\030D \001(\005\022\024\n\010field128\030\200"
  "\001 \001(\005:\0010\022(\n\010field129\030\201\001 \001(\t:\025xxxxxxxxxxx"
  "xxxxxxxxxx\022\024\n\010field131\030\203\001 \001(\005:\0010\"\243\003\n\030Goo"
  "gleMessage1SubMessage\022\021\n\006field1\030\001 \001(\005:\0010"
  "\022\021\n\006field2\030\002 \001(\005:\0010\022\021\n\006field3\030\003 \001(\005:\0010\022\017"
  "\n\007field15\030\017 \001(\t\022\025\n\007field12\030\014 \001(\010:\004true\022\017"
  "\n\007field13\030\r \001(\003\022\017\n\007field14\030\016 \001(\003\022\017\n\007fiel"
  "d16\030\020 \001(\005\022\022\n\007field19\030\023 \001(\005:\0012\022\025\n\007field20"
  "\030\024 \001(\010:\004true\022\025\n\007field28\030\034 \001(\010:\004true\022\017\n\007f"
  "ield21\030\025 \001(\006\022\017\n\007field22\030\026 \001(\005\022\026\n\007field23"
  "\030\027 \001(\010:\005false\022\030\n\010field206\030\316\001 \001(\010:\005false\022"
  "\021\n\010field203\030\313\001 \001(\007\022\021\n\010field204\030\314\001 \001(\005\022\021\n"
  "\010field205\030\315\001 \001(\t\022\021\n\010field207\030\317\001 \001(\004\022\021\n\010f"
  "ield300\030\254\002 \001(\004B%\n\036com.google.protobuf.be"
  "nchmarksH\001\370\001\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_benchmark_5fmessage1_5fproto2_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_benchmark_5fmessage1_5fproto2_2eproto_sccs[2] = {
  &scc_info_GoogleMessage1_benchmark_5fmessage1_5fproto2_2eproto.base,
  &scc_info_GoogleMessage1SubMessage_benchmark_5fmessage1_5fproto2_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_benchmark_5fmessage1_5fproto2_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_benchmark_5fmessage1_5fproto2_2eproto = {
  false, false, descriptor_table_protodef_benchmark_5fmessage1_5fproto2_2eproto, "benchmark_message1_proto2.proto", 1413,
  &descriptor_table_benchmark_5fmessage1_5fproto2_2eproto_once, descriptor_table_benchmark_5fmessage1_5fproto2_2eproto_sccs, descriptor_table_benchmark_5fmessage1_5fproto2_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_benchmark_5fmessage1_5fproto2_2eproto::offsets,
  file_level_metadata_benchmark_5fmessage1_5fproto2_2eproto, 2, file_level_enum_descriptors_benchmark_5fmessage1_5fproto2_2eproto, file_level_service_descriptors_benchmark_5fmessage1_5fproto2_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_benchmark_5fmessage1_5fproto2_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_benchmark_5fmessage1_5fproto2_2eproto)), true);
namespace benchmarks {
namespace proto2 {

// ===================================================================

class GoogleMessage1::_Internal {
 public:
  using HasBits = decltype(std::declval<GoogleMessage1>()._has_bits_);
  static void set_has_field1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_field9(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_field18(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_field80(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_field81(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_field2(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_field3(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_field280(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_field6(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_field22(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_field4(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_field59(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_field7(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_field16(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_field130(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_field12(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_field17(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static void set_has_field13(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static void set_has_field14(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_field104(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_field100(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_field101(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_field102(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_field103(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_field29(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_field30(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_field60(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static void set_has_field271(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static void set_has_field272(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_field150(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_field23(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_field24(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_field25(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::benchmarks::proto2::GoogleMessage1SubMessage& field15(const GoogleMessage1* msg);
  static void set_has_field15(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_field78(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_field67(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_field68(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_field128(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_field129(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_field131(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000601) ^ 0x00000601) != 0;
  }
};

const ::benchmarks::proto2::GoogleMessage1SubMessage&
GoogleMessage1::_Internal::field15(const GoogleMessage1* msg) {
  return *msg->field15_;
}
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString GoogleMessage1::_i_give_permission_to_break_this_code_default_field129_{{{"xxxxxxxxxxxxxxxxxxxxx", 21}}, {nullptr}};
GoogleMessage1::GoogleMessage1(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  field5_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:benchmarks.proto2.GoogleMessage1)
}
GoogleMessage1::GoogleMessage1(const GoogleMessage1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      field5_(from.field5_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  field1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_field1()) {
    field1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field1(), 
      GetArena());
  }
  field4_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_field4()) {
    field4_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field4(), 
      GetArena());
  }
  field7_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_field7()) {
    field7_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field7(), 
      GetArena());
  }
  field9_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_field9()) {
    field9_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field9(), 
      GetArena());
  }
  field18_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_field18()) {
    field18_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field18(), 
      GetArena());
  }
  field102_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_field102()) {
    field102_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field102(), 
      GetArena());
  }
  field103_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_field103()) {
    field103_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field103(), 
      GetArena());
  }
  field129_.UnsafeSetDefault(nullptr);
  if (from._internal_has_field129()) {
    field129_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::NonEmptyDefault{}, from._internal_field129(), 
      GetArena());
  }
  if (from._internal_has_field15()) {
    field15_ = new ::benchmarks::proto2::GoogleMessage1SubMessage(*from.field15_);
  } else {
    field15_ = nullptr;
  }
  ::memcpy(&field2_, &from.field2_,
    static_cast<size_t>(reinterpret_cast<char*>(&field271_) -
    reinterpret_cast<char*>(&field2_)) + sizeof(field271_));
  // @@protoc_insertion_point(copy_constructor:benchmarks.proto2.GoogleMessage1)
}

void GoogleMessage1::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GoogleMessage1_benchmark_5fmessage1_5fproto2_2eproto.base);
  field1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field4_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field7_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field9_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field18_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field102_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field103_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field129_.UnsafeSetDefault(nullptr);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&field15_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&field150_) -
      reinterpret_cast<char*>(&field15_)) + sizeof(field150_));
  field272_ = -1;
  field14_ = true;
  field81_ = true;
  field12_ = true;
  field17_ = true;
  field13_ = true;
  field60_ = -1;
  field271_ = -1;
}

GoogleMessage1::~GoogleMessage1() {
  // @@protoc_insertion_point(destructor:benchmarks.proto2.GoogleMessage1)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GoogleMessage1::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  field1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field4_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field7_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field9_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field18_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field102_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field103_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field129_.DestroyNoArena(nullptr);
  if (this != internal_default_instance()) delete field15_;
}

void GoogleMessage1::ArenaDtor(void* object) {
  GoogleMessage1* _this = reinterpret_cast< GoogleMessage1* >(object);
  (void)_this;
}
void GoogleMessage1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GoogleMessage1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GoogleMessage1& GoogleMessage1::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GoogleMessage1_benchmark_5fmessage1_5fproto2_2eproto.base);
  return *internal_default_instance();
}


void GoogleMessage1::Clear() {
// @@protoc_insertion_point(message_clear_start:benchmarks.proto2.GoogleMessage1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field5_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      field1_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      field4_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      field7_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      field9_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      field18_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      field102_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      field103_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      field129_.ClearToDefault(::benchmarks::proto2::GoogleMessage1::_i_give_permission_to_break_this_code_default_field129_, GetArena());
       }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(field15_ != nullptr);
    field15_->Clear();
  }
  if (cached_has_bits & 0x0000fe00u) {
    ::memset(&field2_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&field25_) -
        reinterpret_cast<char*>(&field2_)) + sizeof(field25_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&field280_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&field68_) -
        reinterpret_cast<char*>(&field280_)) + sizeof(field68_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&field78_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&field150_) -
        reinterpret_cast<char*>(&field78_)) + sizeof(field150_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    field272_ = -1;
    field14_ = true;
    field81_ = true;
    field12_ = true;
    field17_ = true;
    field13_ = true;
    field60_ = -1;
    field271_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoogleMessage1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string field1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_field1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "benchmarks.proto2.GoogleMessage1.field1");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 field2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_field2(&_has_bits_);
          field2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 field3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_field3(&_has_bits_);
          field3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string field4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_field4();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "benchmarks.proto2.GoogleMessage1.field4");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated fixed64 field5 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_field5(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr));
            ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<41>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFixed64Parser(_internal_mutable_field5(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field6 = 6 [default = 0];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_field6(&_has_bits_);
          field6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string field7 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_field7();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "benchmarks.proto2.GoogleMessage1.field7");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string field9 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_field9();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "benchmarks.proto2.GoogleMessage1.field9");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field12 = 12 [default = true];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_field12(&_has_bits_);
          field12_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field13 = 13 [default = true];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_field13(&_has_bits_);
          field13_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field14 = 14 [default = true];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_field14(&_has_bits_);
          field14_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .benchmarks.proto2.GoogleMessage1SubMessage field15 = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_field15(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field16 = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_field16(&_has_bits_);
          field16_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field17 = 17 [default = true];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_field17(&_has_bits_);
          field17_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string field18 = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_field18();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "benchmarks.proto2.GoogleMessage1.field18");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 field22 = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_field22(&_has_bits_);
          field22_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field23 = 23 [default = 0];
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          _Internal::set_has_field23(&_has_bits_);
          field23_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field24 = 24 [default = false];
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_field24(&_has_bits_);
          field24_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field25 = 25 [default = 0];
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          _Internal::set_has_field25(&_has_bits_);
          field25_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field29 = 29 [default = 0];
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          _Internal::set_has_field29(&_has_bits_);
          field29_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field30 = 30 [default = false];
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_field30(&_has_bits_);
          field30_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field59 = 59 [default = false];
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          _Internal::set_has_field59(&_has_bits_);
          field59_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field60 = 60 [default = -1];
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_field60(&_has_bits_);
          field60_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field67 = 67 [default = 0];
      case 67:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_field67(&_has_bits_);
          field67_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field68 = 68;
      case 68:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_field68(&_has_bits_);
          field68_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field78 = 78;
      case 78:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_field78(&_has_bits_);
          field78_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field80 = 80 [default = false];
      case 80:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_field80(&_has_bits_);
          field80_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field81 = 81 [default = true];
      case 81:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_field81(&_has_bits_);
          field81_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field100 = 100 [default = 0];
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_field100(&_has_bits_);
          field100_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field101 = 101 [default = 0];
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_field101(&_has_bits_);
          field101_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string field102 = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_field102();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "benchmarks.proto2.GoogleMessage1.field102");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string field103 = 103;
      case 103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_field103();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "benchmarks.proto2.GoogleMessage1.field103");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field104 = 104 [default = 0];
      case 104:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_field104(&_has_bits_);
          field104_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field128 = 128 [default = 0];
      case 128:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_field128(&_has_bits_);
          field128_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string field129 = 129 [default = "xxxxxxxxxxxxxxxxxxxxx"];
      case 129:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_field129();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "benchmarks.proto2.GoogleMessage1.field129");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field130 = 130 [default = 0];
      case 130:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_field130(&_has_bits_);
          field130_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field131 = 131 [default = 0];
      case 131:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_field131(&_has_bits_);
          field131_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field150 = 150;
      case 150:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_field150(&_has_bits_);
          field150_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field271 = 271 [default = -1];
      case 271:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_field271(&_has_bits_);
          field271_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field272 = 272 [default = -1];
      case 272:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_field272(&_has_bits_);
          field272_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field280 = 280;
      case 280:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_field280(&_has_bits_);
          field280_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GoogleMessage1::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:benchmarks.proto2.GoogleMessage1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string field1 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_field1().data(), static_cast<int>(this->_internal_field1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "benchmarks.proto2.GoogleMessage1.field1");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_field1(), target);
  }

  // required int32 field2 = 2;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_field2(), target);
  }

  // required int32 field3 = 3;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_field3(), target);
  }

  // optional string field4 = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_field4().data(), static_cast<int>(this->_internal_field4().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "benchmarks.proto2.GoogleMessage1.field4");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_field4(), target);
  }

  // repeated fixed64 field5 = 5;
  for (int i = 0, n = this->_internal_field5_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(5, this->_internal_field5(i), target);
  }

  // optional int32 field6 = 6 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_field6(), target);
  }

  // optional string field7 = 7;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_field7().data(), static_cast<int>(this->_internal_field7().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "benchmarks.proto2.GoogleMessage1.field7");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_field7(), target);
  }

  // optional string field9 = 9;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_field9().data(), static_cast<int>(this->_internal_field9().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "benchmarks.proto2.GoogleMessage1.field9");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_field9(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool field12 = 12 [default = true];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_field12(), target);
  }

  // optional bool field13 = 13 [default = true];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->_internal_field13(), target);
  }

  // optional bool field14 = 14 [default = true];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_field14(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .benchmarks.proto2.GoogleMessage1SubMessage field15 = 15;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::field15(this), target, stream);
  }

  // optional int32 field16 = 16;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->_internal_field16(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool field17 = 17 [default = true];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_field17(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string field18 = 18;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_field18().data(), static_cast<int>(this->_internal_field18().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "benchmarks.proto2.GoogleMessage1.field18");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_field18(), target);
  }

  // optional int64 field22 = 22;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(22, this->_internal_field22(), target);
  }

  // optional int32 field23 = 23 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(23, this->_internal_field23(), target);
  }

  // optional bool field24 = 24 [default = false];
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(24, this->_internal_field24(), target);
  }

  // optional int32 field25 = 25 [default = 0];
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(25, this->_internal_field25(), target);
  }

  // optional int32 field29 = 29 [default = 0];
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(29, this->_internal_field29(), target);
  }

  // optional bool field30 = 30 [default = false];
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(30, this->_internal_field30(), target);
  }

  // optional bool field59 = 59 [default = false];
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(59, this->_internal_field59(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 field60 = 60 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(60, this->_internal_field60(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 field67 = 67 [default = 0];
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(67, this->_internal_field67(), target);
  }

  // optional int32 field68 = 68;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(68, this->_internal_field68(), target);
  }

  // optional bool field78 = 78;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(78, this->_internal_field78(), target);
  }

  // optional bool field80 = 80 [default = false];
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(80, this->_internal_field80(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool field81 = 81 [default = true];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(81, this->_internal_field81(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 field100 = 100 [default = 0];
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(100, this->_internal_field100(), target);
  }

  // optional int32 field101 = 101 [default = 0];
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(101, this->_internal_field101(), target);
  }

  // optional string field102 = 102;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_field102().data(), static_cast<int>(this->_internal_field102().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "benchmarks.proto2.GoogleMessage1.field102");
    target = stream->WriteStringMaybeAliased(
        102, this->_internal_field102(), target);
  }

  // optional string field103 = 103;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_field103().data(), static_cast<int>(this->_internal_field103().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "benchmarks.proto2.GoogleMessage1.field103");
    target = stream->WriteStringMaybeAliased(
        103, this->_internal_field103(), target);
  }

  // optional int32 field104 = 104 [default = 0];
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(104, this->_internal_field104(), target);
  }

  // optional int32 field128 = 128 [default = 0];
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(128, this->_internal_field128(), target);
  }

  // optional string field129 = 129 [default = "xxxxxxxxxxxxxxxxxxxxx"];
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_field129().data(), static_cast<int>(this->_internal_field129().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "benchmarks.proto2.GoogleMessage1.field129");
    target = stream->WriteStringMaybeAliased(
        129, this->_internal_field129(), target);
  }

  // optional int32 field130 = 130 [default = 0];
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(130, this->_internal_field130(), target);
  }

  // optional int32 field131 = 131 [default = 0];
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(131, this->_internal_field131(), target);
  }

  // optional int32 field150 = 150;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(150, this->_internal_field150(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 field271 = 271 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(271, this->_internal_field271(), target);
  }

  // optional int32 field272 = 272 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(272, this->_internal_field272(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 field280 = 280;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(280, this->_internal_field280(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:benchmarks.proto2.GoogleMessage1)
  return target;
}

size_t GoogleMessage1::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:benchmarks.proto2.GoogleMessage1)
  size_t total_size = 0;

  if (_internal_has_field1()) {
    // required string field1 = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field1());
  }

  if (_internal_has_field2()) {
    // required int32 field2 = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_field2());
  }

  if (_internal_has_field3()) {
    // required int32 field3 = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_field3());
  }

  return total_size;
}
size_t GoogleMessage1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:benchmarks.proto2.GoogleMessage1)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000601) ^ 0x00000601) == 0) {  // All required fields are present.
    // required string field1 = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field1());

    // required int32 field2 = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_field2());

    // required int32 field3 = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_field3());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed64 field5 = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_field5_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_field5_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000feu) {
    // optional string field4 = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_field4());
    }

    // optional string field7 = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_field7());
    }

    // optional string field9 = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_field9());
    }

    // optional string field18 = 18;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_field18());
    }

    // optional string field102 = 102;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_field102());
    }

    // optional string field103 = 103;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_field103());
    }

    // optional string field129 = 129 [default = "xxxxxxxxxxxxxxxxxxxxx"];
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_field129());
    }

  }
  // optional .benchmarks.proto2.GoogleMessage1SubMessage field15 = 15;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *field15_);
  }

  if (cached_has_bits & 0x0000f800u) {
    // optional int32 field6 = 6 [default = 0];
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field6());
    }

    // optional int32 field16 = 16;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field16());
    }

    // optional int64 field22 = 22;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_field22());
    }

    // optional int32 field23 = 23 [default = 0];
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field23());
    }

    // optional int32 field25 = 25 [default = 0];
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field25());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional int32 field280 = 280;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field280());
    }

    // optional int32 field29 = 29 [default = 0];
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field29());
    }

    // optional bool field80 = 80 [default = false];
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool field59 = 59 [default = false];
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool field30 = 30 [default = false];
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool field24 = 24 [default = false];
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional int32 field67 = 67 [default = 0];
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field67());
    }

    // optional int32 field68 = 68;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field68());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool field78 = 78;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional int32 field100 = 100 [default = 0];
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field100());
    }

    // optional int32 field101 = 101 [default = 0];
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field101());
    }

    // optional int32 field104 = 104 [default = 0];
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field104());
    }

    // optional int32 field128 = 128 [default = 0];
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field128());
    }

    // optional int32 field130 = 130 [default = 0];
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field130());
    }

    // optional int32 field131 = 131 [default = 0];
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field131());
    }

    // optional int32 field150 = 150;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field150());
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 field272 = 272 [default = -1];
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field272());
    }

    // optional bool field14 = 14 [default = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool field81 = 81 [default = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool field12 = 12 [default = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool field17 = 17 [default = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool field13 = 13 [default = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional int32 field60 = 60 [default = -1];
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field60());
    }

    // optional int32 field271 = 271 [default = -1];
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field271());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GoogleMessage1::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:benchmarks.proto2.GoogleMessage1)
  GOOGLE_DCHECK_NE(&from, this);
  const GoogleMessage1* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GoogleMessage1>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:benchmarks.proto2.GoogleMessage1)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:benchmarks.proto2.GoogleMessage1)
    MergeFrom(*source);
  }
}

void GoogleMessage1::MergeFrom(const GoogleMessage1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:benchmarks.proto2.GoogleMessage1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field5_.MergeFrom(from.field5_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_field1(from._internal_field1());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_field4(from._internal_field4());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_field7(from._internal_field7());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_field9(from._internal_field9());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_field18(from._internal_field18());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_field102(from._internal_field102());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_set_field103(from._internal_field103());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_set_field129(from._internal_field129());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_field15()->::benchmarks::proto2::GoogleMessage1SubMessage::MergeFrom(from._internal_field15());
    }
    if (cached_has_bits & 0x00000200u) {
      field2_ = from.field2_;
    }
    if (cached_has_bits & 0x00000400u) {
      field3_ = from.field3_;
    }
    if (cached_has_bits & 0x00000800u) {
      field6_ = from.field6_;
    }
    if (cached_has_bits & 0x00001000u) {
      field16_ = from.field16_;
    }
    if (cached_has_bits & 0x00002000u) {
      field22_ = from.field22_;
    }
    if (cached_has_bits & 0x00004000u) {
      field23_ = from.field23_;
    }
    if (cached_has_bits & 0x00008000u) {
      field25_ = from.field25_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      field280_ = from.field280_;
    }
    if (cached_has_bits & 0x00020000u) {
      field29_ = from.field29_;
    }
    if (cached_has_bits & 0x00040000u) {
      field80_ = from.field80_;
    }
    if (cached_has_bits & 0x00080000u) {
      field59_ = from.field59_;
    }
    if (cached_has_bits & 0x00100000u) {
      field30_ = from.field30_;
    }
    if (cached_has_bits & 0x00200000u) {
      field24_ = from.field24_;
    }
    if (cached_has_bits & 0x00400000u) {
      field67_ = from.field67_;
    }
    if (cached_has_bits & 0x00800000u) {
      field68_ = from.field68_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      field78_ = from.field78_;
    }
    if (cached_has_bits & 0x02000000u) {
      field100_ = from.field100_;
    }
    if (cached_has_bits & 0x04000000u) {
      field101_ = from.field101_;
    }
    if (cached_has_bits & 0x08000000u) {
      field104_ = from.field104_;
    }
    if (cached_has_bits & 0x10000000u) {
      field128_ = from.field128_;
    }
    if (cached_has_bits & 0x20000000u) {
      field130_ = from.field130_;
    }
    if (cached_has_bits & 0x40000000u) {
      field131_ = from.field131_;
    }
    if (cached_has_bits & 0x80000000u) {
      field150_ = from.field150_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      field272_ = from.field272_;
    }
    if (cached_has_bits & 0x00000002u) {
      field14_ = from.field14_;
    }
    if (cached_has_bits & 0x00000004u) {
      field81_ = from.field81_;
    }
    if (cached_has_bits & 0x00000008u) {
      field12_ = from.field12_;
    }
    if (cached_has_bits & 0x00000010u) {
      field17_ = from.field17_;
    }
    if (cached_has_bits & 0x00000020u) {
      field13_ = from.field13_;
    }
    if (cached_has_bits & 0x00000040u) {
      field60_ = from.field60_;
    }
    if (cached_has_bits & 0x00000080u) {
      field271_ = from.field271_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void GoogleMessage1::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:benchmarks.proto2.GoogleMessage1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoogleMessage1::CopyFrom(const GoogleMessage1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:benchmarks.proto2.GoogleMessage1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoogleMessage1::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void GoogleMessage1::InternalSwap(GoogleMessage1* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  field5_.InternalSwap(&other->field5_);
  field1_.Swap(&other->field1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  field4_.Swap(&other->field4_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  field7_.Swap(&other->field7_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  field9_.Swap(&other->field9_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  field18_.Swap(&other->field18_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  field102_.Swap(&other->field102_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  field103_.Swap(&other->field103_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  field129_.Swap(&other->field129_, nullptr, GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GoogleMessage1, field150_)
      + sizeof(GoogleMessage1::field150_)
      - PROTOBUF_FIELD_OFFSET(GoogleMessage1, field15_)>(
          reinterpret_cast<char*>(&field15_),
          reinterpret_cast<char*>(&other->field15_));
  swap(field272_, other->field272_);
  swap(field14_, other->field14_);
  swap(field81_, other->field81_);
  swap(field12_, other->field12_);
  swap(field17_, other->field17_);
  swap(field13_, other->field13_);
  swap(field60_, other->field60_);
  swap(field271_, other->field271_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GoogleMessage1::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GoogleMessage1SubMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<GoogleMessage1SubMessage>()._has_bits_);
  static void set_has_field1(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_field2(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_field3(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_field15(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_field12(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_field13(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_field14(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_field16(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_field19(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_field20(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_field28(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_field21(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_field22(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_field23(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_field206(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_field203(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_field204(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_field205(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_field207(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_field300(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
};

GoogleMessage1SubMessage::GoogleMessage1SubMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:benchmarks.proto2.GoogleMessage1SubMessage)
}
GoogleMessage1SubMessage::GoogleMessage1SubMessage(const GoogleMessage1SubMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  field15_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_field15()) {
    field15_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field15(), 
      GetArena());
  }
  field205_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_field205()) {
    field205_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field205(), 
      GetArena());
  }
  ::memcpy(&field1_, &from.field1_,
    static_cast<size_t>(reinterpret_cast<char*>(&field28_) -
    reinterpret_cast<char*>(&field1_)) + sizeof(field28_));
  // @@protoc_insertion_point(copy_constructor:benchmarks.proto2.GoogleMessage1SubMessage)
}

void GoogleMessage1SubMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GoogleMessage1SubMessage_benchmark_5fmessage1_5fproto2_2eproto.base);
  field15_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field205_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&field1_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&field300_) -
      reinterpret_cast<char*>(&field1_)) + sizeof(field300_));
  field19_ = 2;
  field12_ = true;
  field20_ = true;
  field28_ = true;
}

GoogleMessage1SubMessage::~GoogleMessage1SubMessage() {
  // @@protoc_insertion_point(destructor:benchmarks.proto2.GoogleMessage1SubMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GoogleMessage1SubMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  field15_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field205_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GoogleMessage1SubMessage::ArenaDtor(void* object) {
  GoogleMessage1SubMessage* _this = reinterpret_cast< GoogleMessage1SubMessage* >(object);
  (void)_this;
}
void GoogleMessage1SubMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GoogleMessage1SubMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GoogleMessage1SubMessage& GoogleMessage1SubMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GoogleMessage1SubMessage_benchmark_5fmessage1_5fproto2_2eproto.base);
  return *internal_default_instance();
}


void GoogleMessage1SubMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:benchmarks.proto2.GoogleMessage1SubMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      field15_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      field205_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&field1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&field14_) -
        reinterpret_cast<char*>(&field1_)) + sizeof(field14_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&field21_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&field300_) -
        reinterpret_cast<char*>(&field21_)) + sizeof(field300_));
  }
  if (cached_has_bits & 0x000f0000u) {
    field19_ = 2;
    field12_ = true;
    field20_ = true;
    field28_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoogleMessage1SubMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 field1 = 1 [default = 0];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_field1(&has_bits);
          field1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field2 = 2 [default = 0];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_field2(&has_bits);
          field2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field3 = 3 [default = 0];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_field3(&has_bits);
          field3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field12 = 12 [default = true];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_field12(&has_bits);
          field12_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 field13 = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_field13(&has_bits);
          field13_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 field14 = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_field14(&has_bits);
          field14_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string field15 = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_field15();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "benchmarks.proto2.GoogleMessage1SubMessage.field15");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field16 = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_field16(&has_bits);
          field16_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field19 = 19 [default = 2];
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_field19(&has_bits);
          field19_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field20 = 20 [default = true];
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_field20(&has_bits);
          field20_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 field21 = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 169)) {
          _Internal::set_has_field21(&has_bits);
          field21_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional int32 field22 = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_field22(&has_bits);
          field22_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field23 = 23 [default = false];
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          _Internal::set_has_field23(&has_bits);
          field23_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field28 = 28 [default = true];
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_field28(&has_bits);
          field28_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed32 field203 = 203;
      case 203:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 93)) {
          _Internal::set_has_field203(&has_bits);
          field203_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // optional int32 field204 = 204;
      case 204:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_field204(&has_bits);
          field204_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string field205 = 205;
      case 205:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_field205();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "benchmarks.proto2.GoogleMessage1SubMessage.field205");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool field206 = 206 [default = false];
      case 206:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_field206(&has_bits);
          field206_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 field207 = 207;
      case 207:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_field207(&has_bits);
          field207_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 field300 = 300;
      case 300:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_field300(&has_bits);
          field300_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GoogleMessage1SubMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:benchmarks.proto2.GoogleMessage1SubMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 field1 = 1 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_field1(), target);
  }

  // optional int32 field2 = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_field2(), target);
  }

  // optional int32 field3 = 3 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_field3(), target);
  }

  // optional bool field12 = 12 [default = true];
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_field12(), target);
  }

  // optional int64 field13 = 13;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(13, this->_internal_field13(), target);
  }

  // optional int64 field14 = 14;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(14, this->_internal_field14(), target);
  }

  // optional string field15 = 15;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_field15().data(), static_cast<int>(this->_internal_field15().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "benchmarks.proto2.GoogleMessage1SubMessage.field15");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_field15(), target);
  }

  // optional int32 field16 = 16;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->_internal_field16(), target);
  }

  // optional int32 field19 = 19 [default = 2];
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->_internal_field19(), target);
  }

  // optional bool field20 = 20 [default = true];
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->_internal_field20(), target);
  }

  // optional fixed64 field21 = 21;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(21, this->_internal_field21(), target);
  }

  // optional int32 field22 = 22;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(22, this->_internal_field22(), target);
  }

  // optional bool field23 = 23 [default = false];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(23, this->_internal_field23(), target);
  }

  // optional bool field28 = 28 [default = true];
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->_internal_field28(), target);
  }

  // optional fixed32 field203 = 203;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(203, this->_internal_field203(), target);
  }

  // optional int32 field204 = 204;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(204, this->_internal_field204(), target);
  }

  // optional string field205 = 205;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_field205().data(), static_cast<int>(this->_internal_field205().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "benchmarks.proto2.GoogleMessage1SubMessage.field205");
    target = stream->WriteStringMaybeAliased(
        205, this->_internal_field205(), target);
  }

  // optional bool field206 = 206 [default = false];
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(206, this->_internal_field206(), target);
  }

  // optional uint64 field207 = 207;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(207, this->_internal_field207(), target);
  }

  // optional uint64 field300 = 300;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(300, this->_internal_field300(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:benchmarks.proto2.GoogleMessage1SubMessage)
  return target;
}

size_t GoogleMessage1SubMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:benchmarks.proto2.GoogleMessage1SubMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string field15 = 15;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_field15());
    }

    // optional string field205 = 205;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_field205());
    }

    // optional int32 field1 = 1 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field1());
    }

    // optional int32 field2 = 2 [default = 0];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field2());
    }

    // optional int32 field3 = 3 [default = 0];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field3());
    }

    // optional int32 field16 = 16;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field16());
    }

    // optional int64 field13 = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_field13());
    }

    // optional int64 field14 = 14;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_field14());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional fixed64 field21 = 21;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 8;
    }

    // optional int32 field22 = 22;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field22());
    }

    // optional bool field23 = 23 [default = false];
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool field206 = 206 [default = false];
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional fixed32 field203 = 203;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 4;
    }

    // optional int32 field204 = 204;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field204());
    }

    // optional uint64 field207 = 207;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_field207());
    }

    // optional uint64 field300 = 300;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_field300());
    }

  }
  if (cached_has_bits & 0x000f0000u) {
    // optional int32 field19 = 19 [default = 2];
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_field19());
    }

    // optional bool field12 = 12 [default = true];
    if (cached_has_bits & 0x00020000u) {
      total_size += 1 + 1;
    }

    // optional bool field20 = 20 [default = true];
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool field28 = 28 [default = true];
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GoogleMessage1SubMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:benchmarks.proto2.GoogleMessage1SubMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const GoogleMessage1SubMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GoogleMessage1SubMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:benchmarks.proto2.GoogleMessage1SubMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:benchmarks.proto2.GoogleMessage1SubMessage)
    MergeFrom(*source);
  }
}

void GoogleMessage1SubMessage::MergeFrom(const GoogleMessage1SubMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:benchmarks.proto2.GoogleMessage1SubMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_field15(from._internal_field15());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_field205(from._internal_field205());
    }
    if (cached_has_bits & 0x00000004u) {
      field1_ = from.field1_;
    }
    if (cached_has_bits & 0x00000008u) {
      field2_ = from.field2_;
    }
    if (cached_has_bits & 0x00000010u) {
      field3_ = from.field3_;
    }
    if (cached_has_bits & 0x00000020u) {
      field16_ = from.field16_;
    }
    if (cached_has_bits & 0x00000040u) {
      field13_ = from.field13_;
    }
    if (cached_has_bits & 0x00000080u) {
      field14_ = from.field14_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      field21_ = from.field21_;
    }
    if (cached_has_bits & 0x00000200u) {
      field22_ = from.field22_;
    }
    if (cached_has_bits & 0x00000400u) {
      field23_ = from.field23_;
    }
    if (cached_has_bits & 0x00000800u) {
      field206_ = from.field206_;
    }
    if (cached_has_bits & 0x00001000u) {
      field203_ = from.field203_;
    }
    if (cached_has_bits & 0x00002000u) {
      field204_ = from.field204_;
    }
    if (cached_has_bits & 0x00004000u) {
      field207_ = from.field207_;
    }
    if (cached_has_bits & 0x00008000u) {
      field300_ = from.field300_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x000f0000u) {
    if (cached_has_bits & 0x00010000u) {
      field19_ = from.field19_;
    }
    if (cached_has_bits & 0x00020000u) {
      field12_ = from.field12_;
    }
    if (cached_has_bits & 0x00040000u) {
      field20_ = from.field20_;
    }
    if (cached_has_bits & 0x00080000u) {
      field28_ = from.field28_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GoogleMessage1SubMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:benchmarks.proto2.GoogleMessage1SubMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoogleMessage1SubMessage::CopyFrom(const GoogleMessage1SubMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:benchmarks.proto2.GoogleMessage1SubMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoogleMessage1SubMessage::IsInitialized() const {
  return true;
}

void GoogleMessage1SubMessage::InternalSwap(GoogleMessage1SubMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  field15_.Swap(&other->field15_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  field205_.Swap(&other->field205_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GoogleMessage1SubMessage, field300_)
      + sizeof(GoogleMessage1SubMessage::field300_)
      - PROTOBUF_FIELD_OFFSET(GoogleMessage1SubMessage, field1_)>(
          reinterpret_cast<char*>(&field1_),
          reinterpret_cast<char*>(&other->field1_));
  swap(field19_, other->field19_);
  swap(field12_, other->field12_);
  swap(field20_, other->field20_);
  swap(field28_, other->field28_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GoogleMessage1SubMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto2
}  // namespace benchmarks
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::benchmarks::proto2::GoogleMessage1* Arena::CreateMaybeMessage< ::benchmarks::proto2::GoogleMessage1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::benchmarks::proto2::GoogleMessage1 >(arena);
}
template<> PROTOBUF_NOINLINE ::benchmarks::proto2::GoogleMessage1SubMessage* Arena::CreateMaybeMessage< ::benchmarks::proto2::GoogleMessage1SubMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::benchmarks::proto2::GoogleMessage1SubMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
