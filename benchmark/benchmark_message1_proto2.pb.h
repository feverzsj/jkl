// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: benchmark_message1_proto2.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_benchmark_5fmessage1_5fproto2_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_benchmark_5fmessage1_5fproto2_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_benchmark_5fmessage1_5fproto2_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_benchmark_5fmessage1_5fproto2_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_benchmark_5fmessage1_5fproto2_2eproto;
namespace benchmarks {
namespace proto2 {
class GoogleMessage1;
class GoogleMessage1DefaultTypeInternal;
extern GoogleMessage1DefaultTypeInternal _GoogleMessage1_default_instance_;
class GoogleMessage1SubMessage;
class GoogleMessage1SubMessageDefaultTypeInternal;
extern GoogleMessage1SubMessageDefaultTypeInternal _GoogleMessage1SubMessage_default_instance_;
}  // namespace proto2
}  // namespace benchmarks
PROTOBUF_NAMESPACE_OPEN
template<> ::benchmarks::proto2::GoogleMessage1* Arena::CreateMaybeMessage<::benchmarks::proto2::GoogleMessage1>(Arena*);
template<> ::benchmarks::proto2::GoogleMessage1SubMessage* Arena::CreateMaybeMessage<::benchmarks::proto2::GoogleMessage1SubMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace benchmarks {
namespace proto2 {

// ===================================================================

class GoogleMessage1 PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:benchmarks.proto2.GoogleMessage1) */ {
 public:
  inline GoogleMessage1() : GoogleMessage1(nullptr) {}
  virtual ~GoogleMessage1();

  GoogleMessage1(const GoogleMessage1& from);
  GoogleMessage1(GoogleMessage1&& from) noexcept
    : GoogleMessage1() {
    *this = ::std::move(from);
  }

  inline GoogleMessage1& operator=(const GoogleMessage1& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoogleMessage1& operator=(GoogleMessage1&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GoogleMessage1& default_instance();

  static inline const GoogleMessage1* internal_default_instance() {
    return reinterpret_cast<const GoogleMessage1*>(
               &_GoogleMessage1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GoogleMessage1& a, GoogleMessage1& b) {
    a.Swap(&b);
  }
  inline void Swap(GoogleMessage1* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoogleMessage1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GoogleMessage1* New() const final {
    return CreateMaybeMessage<GoogleMessage1>(nullptr);
  }

  GoogleMessage1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GoogleMessage1>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GoogleMessage1& from);
  void MergeFrom(const GoogleMessage1& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoogleMessage1* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "benchmarks.proto2.GoogleMessage1";
  }
  protected:
  explicit GoogleMessage1(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_benchmark_5fmessage1_5fproto2_2eproto);
    return ::descriptor_table_benchmark_5fmessage1_5fproto2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kField5FieldNumber = 5,
    kField1FieldNumber = 1,
    kField4FieldNumber = 4,
    kField7FieldNumber = 7,
    kField9FieldNumber = 9,
    kField18FieldNumber = 18,
    kField102FieldNumber = 102,
    kField103FieldNumber = 103,
    kField129FieldNumber = 129,
    kField15FieldNumber = 15,
    kField2FieldNumber = 2,
    kField3FieldNumber = 3,
    kField6FieldNumber = 6,
    kField16FieldNumber = 16,
    kField22FieldNumber = 22,
    kField23FieldNumber = 23,
    kField25FieldNumber = 25,
    kField280FieldNumber = 280,
    kField29FieldNumber = 29,
    kField80FieldNumber = 80,
    kField59FieldNumber = 59,
    kField30FieldNumber = 30,
    kField24FieldNumber = 24,
    kField67FieldNumber = 67,
    kField68FieldNumber = 68,
    kField78FieldNumber = 78,
    kField100FieldNumber = 100,
    kField101FieldNumber = 101,
    kField104FieldNumber = 104,
    kField128FieldNumber = 128,
    kField130FieldNumber = 130,
    kField131FieldNumber = 131,
    kField150FieldNumber = 150,
    kField272FieldNumber = 272,
    kField14FieldNumber = 14,
    kField81FieldNumber = 81,
    kField12FieldNumber = 12,
    kField17FieldNumber = 17,
    kField13FieldNumber = 13,
    kField60FieldNumber = 60,
    kField271FieldNumber = 271,
  };
  // repeated fixed64 field5 = 5;
  int field5_size() const;
  private:
  int _internal_field5_size() const;
  public:
  void clear_field5();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_field5(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_field5() const;
  void _internal_add_field5(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_field5();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 field5(int index) const;
  void set_field5(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_field5(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      field5() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_field5();

  // required string field1 = 1;
  bool has_field1() const;
  private:
  bool _internal_has_field1() const;
  public:
  void clear_field1();
  const std::string& field1() const;
  void set_field1(const std::string& value);
  void set_field1(std::string&& value);
  void set_field1(const char* value);
  void set_field1(const char* value, size_t size);
  std::string* mutable_field1();
  std::string* release_field1();
  void set_allocated_field1(std::string* field1);
  private:
  const std::string& _internal_field1() const;
  void _internal_set_field1(const std::string& value);
  std::string* _internal_mutable_field1();
  public:

  // optional string field4 = 4;
  bool has_field4() const;
  private:
  bool _internal_has_field4() const;
  public:
  void clear_field4();
  const std::string& field4() const;
  void set_field4(const std::string& value);
  void set_field4(std::string&& value);
  void set_field4(const char* value);
  void set_field4(const char* value, size_t size);
  std::string* mutable_field4();
  std::string* release_field4();
  void set_allocated_field4(std::string* field4);
  private:
  const std::string& _internal_field4() const;
  void _internal_set_field4(const std::string& value);
  std::string* _internal_mutable_field4();
  public:

  // optional string field7 = 7;
  bool has_field7() const;
  private:
  bool _internal_has_field7() const;
  public:
  void clear_field7();
  const std::string& field7() const;
  void set_field7(const std::string& value);
  void set_field7(std::string&& value);
  void set_field7(const char* value);
  void set_field7(const char* value, size_t size);
  std::string* mutable_field7();
  std::string* release_field7();
  void set_allocated_field7(std::string* field7);
  private:
  const std::string& _internal_field7() const;
  void _internal_set_field7(const std::string& value);
  std::string* _internal_mutable_field7();
  public:

  // optional string field9 = 9;
  bool has_field9() const;
  private:
  bool _internal_has_field9() const;
  public:
  void clear_field9();
  const std::string& field9() const;
  void set_field9(const std::string& value);
  void set_field9(std::string&& value);
  void set_field9(const char* value);
  void set_field9(const char* value, size_t size);
  std::string* mutable_field9();
  std::string* release_field9();
  void set_allocated_field9(std::string* field9);
  private:
  const std::string& _internal_field9() const;
  void _internal_set_field9(const std::string& value);
  std::string* _internal_mutable_field9();
  public:

  // optional string field18 = 18;
  bool has_field18() const;
  private:
  bool _internal_has_field18() const;
  public:
  void clear_field18();
  const std::string& field18() const;
  void set_field18(const std::string& value);
  void set_field18(std::string&& value);
  void set_field18(const char* value);
  void set_field18(const char* value, size_t size);
  std::string* mutable_field18();
  std::string* release_field18();
  void set_allocated_field18(std::string* field18);
  private:
  const std::string& _internal_field18() const;
  void _internal_set_field18(const std::string& value);
  std::string* _internal_mutable_field18();
  public:

  // optional string field102 = 102;
  bool has_field102() const;
  private:
  bool _internal_has_field102() const;
  public:
  void clear_field102();
  const std::string& field102() const;
  void set_field102(const std::string& value);
  void set_field102(std::string&& value);
  void set_field102(const char* value);
  void set_field102(const char* value, size_t size);
  std::string* mutable_field102();
  std::string* release_field102();
  void set_allocated_field102(std::string* field102);
  private:
  const std::string& _internal_field102() const;
  void _internal_set_field102(const std::string& value);
  std::string* _internal_mutable_field102();
  public:

  // optional string field103 = 103;
  bool has_field103() const;
  private:
  bool _internal_has_field103() const;
  public:
  void clear_field103();
  const std::string& field103() const;
  void set_field103(const std::string& value);
  void set_field103(std::string&& value);
  void set_field103(const char* value);
  void set_field103(const char* value, size_t size);
  std::string* mutable_field103();
  std::string* release_field103();
  void set_allocated_field103(std::string* field103);
  private:
  const std::string& _internal_field103() const;
  void _internal_set_field103(const std::string& value);
  std::string* _internal_mutable_field103();
  public:

  // optional string field129 = 129 [default = "xxxxxxxxxxxxxxxxxxxxx"];
  bool has_field129() const;
  private:
  bool _internal_has_field129() const;
  public:
  void clear_field129();
  const std::string& field129() const;
  void set_field129(const std::string& value);
  void set_field129(std::string&& value);
  void set_field129(const char* value);
  void set_field129(const char* value, size_t size);
  std::string* mutable_field129();
  std::string* release_field129();
  void set_allocated_field129(std::string* field129);
  private:
  const std::string& _internal_field129() const;
  void _internal_set_field129(const std::string& value);
  std::string* _internal_mutable_field129();
  public:

  // optional .benchmarks.proto2.GoogleMessage1SubMessage field15 = 15;
  bool has_field15() const;
  private:
  bool _internal_has_field15() const;
  public:
  void clear_field15();
  const ::benchmarks::proto2::GoogleMessage1SubMessage& field15() const;
  ::benchmarks::proto2::GoogleMessage1SubMessage* release_field15();
  ::benchmarks::proto2::GoogleMessage1SubMessage* mutable_field15();
  void set_allocated_field15(::benchmarks::proto2::GoogleMessage1SubMessage* field15);
  private:
  const ::benchmarks::proto2::GoogleMessage1SubMessage& _internal_field15() const;
  ::benchmarks::proto2::GoogleMessage1SubMessage* _internal_mutable_field15();
  public:
  void unsafe_arena_set_allocated_field15(
      ::benchmarks::proto2::GoogleMessage1SubMessage* field15);
  ::benchmarks::proto2::GoogleMessage1SubMessage* unsafe_arena_release_field15();

  // required int32 field2 = 2;
  bool has_field2() const;
  private:
  bool _internal_has_field2() const;
  public:
  void clear_field2();
  ::PROTOBUF_NAMESPACE_ID::int32 field2() const;
  void set_field2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field2() const;
  void _internal_set_field2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 field3 = 3;
  bool has_field3() const;
  private:
  bool _internal_has_field3() const;
  public:
  void clear_field3();
  ::PROTOBUF_NAMESPACE_ID::int32 field3() const;
  void set_field3(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field3() const;
  void _internal_set_field3(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field6 = 6 [default = 0];
  bool has_field6() const;
  private:
  bool _internal_has_field6() const;
  public:
  void clear_field6();
  ::PROTOBUF_NAMESPACE_ID::int32 field6() const;
  void set_field6(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field6() const;
  void _internal_set_field6(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field16 = 16;
  bool has_field16() const;
  private:
  bool _internal_has_field16() const;
  public:
  void clear_field16();
  ::PROTOBUF_NAMESPACE_ID::int32 field16() const;
  void set_field16(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field16() const;
  void _internal_set_field16(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int64 field22 = 22;
  bool has_field22() const;
  private:
  bool _internal_has_field22() const;
  public:
  void clear_field22();
  ::PROTOBUF_NAMESPACE_ID::int64 field22() const;
  void set_field22(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_field22() const;
  void _internal_set_field22(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int32 field23 = 23 [default = 0];
  bool has_field23() const;
  private:
  bool _internal_has_field23() const;
  public:
  void clear_field23();
  ::PROTOBUF_NAMESPACE_ID::int32 field23() const;
  void set_field23(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field23() const;
  void _internal_set_field23(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field25 = 25 [default = 0];
  bool has_field25() const;
  private:
  bool _internal_has_field25() const;
  public:
  void clear_field25();
  ::PROTOBUF_NAMESPACE_ID::int32 field25() const;
  void set_field25(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field25() const;
  void _internal_set_field25(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field280 = 280;
  bool has_field280() const;
  private:
  bool _internal_has_field280() const;
  public:
  void clear_field280();
  ::PROTOBUF_NAMESPACE_ID::int32 field280() const;
  void set_field280(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field280() const;
  void _internal_set_field280(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field29 = 29 [default = 0];
  bool has_field29() const;
  private:
  bool _internal_has_field29() const;
  public:
  void clear_field29();
  ::PROTOBUF_NAMESPACE_ID::int32 field29() const;
  void set_field29(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field29() const;
  void _internal_set_field29(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool field80 = 80 [default = false];
  bool has_field80() const;
  private:
  bool _internal_has_field80() const;
  public:
  void clear_field80();
  bool field80() const;
  void set_field80(bool value);
  private:
  bool _internal_field80() const;
  void _internal_set_field80(bool value);
  public:

  // optional bool field59 = 59 [default = false];
  bool has_field59() const;
  private:
  bool _internal_has_field59() const;
  public:
  void clear_field59();
  bool field59() const;
  void set_field59(bool value);
  private:
  bool _internal_field59() const;
  void _internal_set_field59(bool value);
  public:

  // optional bool field30 = 30 [default = false];
  bool has_field30() const;
  private:
  bool _internal_has_field30() const;
  public:
  void clear_field30();
  bool field30() const;
  void set_field30(bool value);
  private:
  bool _internal_field30() const;
  void _internal_set_field30(bool value);
  public:

  // optional bool field24 = 24 [default = false];
  bool has_field24() const;
  private:
  bool _internal_has_field24() const;
  public:
  void clear_field24();
  bool field24() const;
  void set_field24(bool value);
  private:
  bool _internal_field24() const;
  void _internal_set_field24(bool value);
  public:

  // optional int32 field67 = 67 [default = 0];
  bool has_field67() const;
  private:
  bool _internal_has_field67() const;
  public:
  void clear_field67();
  ::PROTOBUF_NAMESPACE_ID::int32 field67() const;
  void set_field67(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field67() const;
  void _internal_set_field67(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field68 = 68;
  bool has_field68() const;
  private:
  bool _internal_has_field68() const;
  public:
  void clear_field68();
  ::PROTOBUF_NAMESPACE_ID::int32 field68() const;
  void set_field68(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field68() const;
  void _internal_set_field68(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool field78 = 78;
  bool has_field78() const;
  private:
  bool _internal_has_field78() const;
  public:
  void clear_field78();
  bool field78() const;
  void set_field78(bool value);
  private:
  bool _internal_field78() const;
  void _internal_set_field78(bool value);
  public:

  // optional int32 field100 = 100 [default = 0];
  bool has_field100() const;
  private:
  bool _internal_has_field100() const;
  public:
  void clear_field100();
  ::PROTOBUF_NAMESPACE_ID::int32 field100() const;
  void set_field100(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field100() const;
  void _internal_set_field100(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field101 = 101 [default = 0];
  bool has_field101() const;
  private:
  bool _internal_has_field101() const;
  public:
  void clear_field101();
  ::PROTOBUF_NAMESPACE_ID::int32 field101() const;
  void set_field101(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field101() const;
  void _internal_set_field101(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field104 = 104 [default = 0];
  bool has_field104() const;
  private:
  bool _internal_has_field104() const;
  public:
  void clear_field104();
  ::PROTOBUF_NAMESPACE_ID::int32 field104() const;
  void set_field104(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field104() const;
  void _internal_set_field104(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field128 = 128 [default = 0];
  bool has_field128() const;
  private:
  bool _internal_has_field128() const;
  public:
  void clear_field128();
  ::PROTOBUF_NAMESPACE_ID::int32 field128() const;
  void set_field128(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field128() const;
  void _internal_set_field128(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field130 = 130 [default = 0];
  bool has_field130() const;
  private:
  bool _internal_has_field130() const;
  public:
  void clear_field130();
  ::PROTOBUF_NAMESPACE_ID::int32 field130() const;
  void set_field130(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field130() const;
  void _internal_set_field130(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field131 = 131 [default = 0];
  bool has_field131() const;
  private:
  bool _internal_has_field131() const;
  public:
  void clear_field131();
  ::PROTOBUF_NAMESPACE_ID::int32 field131() const;
  void set_field131(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field131() const;
  void _internal_set_field131(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field150 = 150;
  bool has_field150() const;
  private:
  bool _internal_has_field150() const;
  public:
  void clear_field150();
  ::PROTOBUF_NAMESPACE_ID::int32 field150() const;
  void set_field150(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field150() const;
  void _internal_set_field150(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field272 = 272 [default = -1];
  bool has_field272() const;
  private:
  bool _internal_has_field272() const;
  public:
  void clear_field272();
  ::PROTOBUF_NAMESPACE_ID::int32 field272() const;
  void set_field272(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field272() const;
  void _internal_set_field272(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool field14 = 14 [default = true];
  bool has_field14() const;
  private:
  bool _internal_has_field14() const;
  public:
  void clear_field14();
  bool field14() const;
  void set_field14(bool value);
  private:
  bool _internal_field14() const;
  void _internal_set_field14(bool value);
  public:

  // optional bool field81 = 81 [default = true];
  bool has_field81() const;
  private:
  bool _internal_has_field81() const;
  public:
  void clear_field81();
  bool field81() const;
  void set_field81(bool value);
  private:
  bool _internal_field81() const;
  void _internal_set_field81(bool value);
  public:

  // optional bool field12 = 12 [default = true];
  bool has_field12() const;
  private:
  bool _internal_has_field12() const;
  public:
  void clear_field12();
  bool field12() const;
  void set_field12(bool value);
  private:
  bool _internal_field12() const;
  void _internal_set_field12(bool value);
  public:

  // optional bool field17 = 17 [default = true];
  bool has_field17() const;
  private:
  bool _internal_has_field17() const;
  public:
  void clear_field17();
  bool field17() const;
  void set_field17(bool value);
  private:
  bool _internal_field17() const;
  void _internal_set_field17(bool value);
  public:

  // optional bool field13 = 13 [default = true];
  bool has_field13() const;
  private:
  bool _internal_has_field13() const;
  public:
  void clear_field13();
  bool field13() const;
  void set_field13(bool value);
  private:
  bool _internal_field13() const;
  void _internal_set_field13(bool value);
  public:

  // optional int32 field60 = 60 [default = -1];
  bool has_field60() const;
  private:
  bool _internal_has_field60() const;
  public:
  void clear_field60();
  ::PROTOBUF_NAMESPACE_ID::int32 field60() const;
  void set_field60(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field60() const;
  void _internal_set_field60(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field271 = 271 [default = -1];
  bool has_field271() const;
  private:
  bool _internal_has_field271() const;
  public:
  void clear_field271();
  ::PROTOBUF_NAMESPACE_ID::int32 field271() const;
  void set_field271(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field271() const;
  void _internal_set_field271(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:benchmarks.proto2.GoogleMessage1)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<2> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > field5_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field4_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field7_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field9_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field18_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field102_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field103_;
  static const ::PROTOBUF_NAMESPACE_ID::internal::LazyString _i_give_permission_to_break_this_code_default_field129_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field129_;
  ::benchmarks::proto2::GoogleMessage1SubMessage* field15_;
  ::PROTOBUF_NAMESPACE_ID::int32 field2_;
  ::PROTOBUF_NAMESPACE_ID::int32 field3_;
  ::PROTOBUF_NAMESPACE_ID::int32 field6_;
  ::PROTOBUF_NAMESPACE_ID::int32 field16_;
  ::PROTOBUF_NAMESPACE_ID::int64 field22_;
  ::PROTOBUF_NAMESPACE_ID::int32 field23_;
  ::PROTOBUF_NAMESPACE_ID::int32 field25_;
  ::PROTOBUF_NAMESPACE_ID::int32 field280_;
  ::PROTOBUF_NAMESPACE_ID::int32 field29_;
  bool field80_;
  bool field59_;
  bool field30_;
  bool field24_;
  ::PROTOBUF_NAMESPACE_ID::int32 field67_;
  ::PROTOBUF_NAMESPACE_ID::int32 field68_;
  bool field78_;
  ::PROTOBUF_NAMESPACE_ID::int32 field100_;
  ::PROTOBUF_NAMESPACE_ID::int32 field101_;
  ::PROTOBUF_NAMESPACE_ID::int32 field104_;
  ::PROTOBUF_NAMESPACE_ID::int32 field128_;
  ::PROTOBUF_NAMESPACE_ID::int32 field130_;
  ::PROTOBUF_NAMESPACE_ID::int32 field131_;
  ::PROTOBUF_NAMESPACE_ID::int32 field150_;
  ::PROTOBUF_NAMESPACE_ID::int32 field272_;
  bool field14_;
  bool field81_;
  bool field12_;
  bool field17_;
  bool field13_;
  ::PROTOBUF_NAMESPACE_ID::int32 field60_;
  ::PROTOBUF_NAMESPACE_ID::int32 field271_;
  friend struct ::TableStruct_benchmark_5fmessage1_5fproto2_2eproto;
};
// -------------------------------------------------------------------

class GoogleMessage1SubMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:benchmarks.proto2.GoogleMessage1SubMessage) */ {
 public:
  inline GoogleMessage1SubMessage() : GoogleMessage1SubMessage(nullptr) {}
  virtual ~GoogleMessage1SubMessage();

  GoogleMessage1SubMessage(const GoogleMessage1SubMessage& from);
  GoogleMessage1SubMessage(GoogleMessage1SubMessage&& from) noexcept
    : GoogleMessage1SubMessage() {
    *this = ::std::move(from);
  }

  inline GoogleMessage1SubMessage& operator=(const GoogleMessage1SubMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoogleMessage1SubMessage& operator=(GoogleMessage1SubMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GoogleMessage1SubMessage& default_instance();

  static inline const GoogleMessage1SubMessage* internal_default_instance() {
    return reinterpret_cast<const GoogleMessage1SubMessage*>(
               &_GoogleMessage1SubMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GoogleMessage1SubMessage& a, GoogleMessage1SubMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(GoogleMessage1SubMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoogleMessage1SubMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GoogleMessage1SubMessage* New() const final {
    return CreateMaybeMessage<GoogleMessage1SubMessage>(nullptr);
  }

  GoogleMessage1SubMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GoogleMessage1SubMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GoogleMessage1SubMessage& from);
  void MergeFrom(const GoogleMessage1SubMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoogleMessage1SubMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "benchmarks.proto2.GoogleMessage1SubMessage";
  }
  protected:
  explicit GoogleMessage1SubMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_benchmark_5fmessage1_5fproto2_2eproto);
    return ::descriptor_table_benchmark_5fmessage1_5fproto2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kField15FieldNumber = 15,
    kField205FieldNumber = 205,
    kField1FieldNumber = 1,
    kField2FieldNumber = 2,
    kField3FieldNumber = 3,
    kField16FieldNumber = 16,
    kField13FieldNumber = 13,
    kField14FieldNumber = 14,
    kField21FieldNumber = 21,
    kField22FieldNumber = 22,
    kField23FieldNumber = 23,
    kField206FieldNumber = 206,
    kField203FieldNumber = 203,
    kField204FieldNumber = 204,
    kField207FieldNumber = 207,
    kField300FieldNumber = 300,
    kField19FieldNumber = 19,
    kField12FieldNumber = 12,
    kField20FieldNumber = 20,
    kField28FieldNumber = 28,
  };
  // optional string field15 = 15;
  bool has_field15() const;
  private:
  bool _internal_has_field15() const;
  public:
  void clear_field15();
  const std::string& field15() const;
  void set_field15(const std::string& value);
  void set_field15(std::string&& value);
  void set_field15(const char* value);
  void set_field15(const char* value, size_t size);
  std::string* mutable_field15();
  std::string* release_field15();
  void set_allocated_field15(std::string* field15);
  private:
  const std::string& _internal_field15() const;
  void _internal_set_field15(const std::string& value);
  std::string* _internal_mutable_field15();
  public:

  // optional string field205 = 205;
  bool has_field205() const;
  private:
  bool _internal_has_field205() const;
  public:
  void clear_field205();
  const std::string& field205() const;
  void set_field205(const std::string& value);
  void set_field205(std::string&& value);
  void set_field205(const char* value);
  void set_field205(const char* value, size_t size);
  std::string* mutable_field205();
  std::string* release_field205();
  void set_allocated_field205(std::string* field205);
  private:
  const std::string& _internal_field205() const;
  void _internal_set_field205(const std::string& value);
  std::string* _internal_mutable_field205();
  public:

  // optional int32 field1 = 1 [default = 0];
  bool has_field1() const;
  private:
  bool _internal_has_field1() const;
  public:
  void clear_field1();
  ::PROTOBUF_NAMESPACE_ID::int32 field1() const;
  void set_field1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field1() const;
  void _internal_set_field1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field2 = 2 [default = 0];
  bool has_field2() const;
  private:
  bool _internal_has_field2() const;
  public:
  void clear_field2();
  ::PROTOBUF_NAMESPACE_ID::int32 field2() const;
  void set_field2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field2() const;
  void _internal_set_field2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field3 = 3 [default = 0];
  bool has_field3() const;
  private:
  bool _internal_has_field3() const;
  public:
  void clear_field3();
  ::PROTOBUF_NAMESPACE_ID::int32 field3() const;
  void set_field3(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field3() const;
  void _internal_set_field3(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 field16 = 16;
  bool has_field16() const;
  private:
  bool _internal_has_field16() const;
  public:
  void clear_field16();
  ::PROTOBUF_NAMESPACE_ID::int32 field16() const;
  void set_field16(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field16() const;
  void _internal_set_field16(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int64 field13 = 13;
  bool has_field13() const;
  private:
  bool _internal_has_field13() const;
  public:
  void clear_field13();
  ::PROTOBUF_NAMESPACE_ID::int64 field13() const;
  void set_field13(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_field13() const;
  void _internal_set_field13(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 field14 = 14;
  bool has_field14() const;
  private:
  bool _internal_has_field14() const;
  public:
  void clear_field14();
  ::PROTOBUF_NAMESPACE_ID::int64 field14() const;
  void set_field14(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_field14() const;
  void _internal_set_field14(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional fixed64 field21 = 21;
  bool has_field21() const;
  private:
  bool _internal_has_field21() const;
  public:
  void clear_field21();
  ::PROTOBUF_NAMESPACE_ID::uint64 field21() const;
  void set_field21(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_field21() const;
  void _internal_set_field21(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 field22 = 22;
  bool has_field22() const;
  private:
  bool _internal_has_field22() const;
  public:
  void clear_field22();
  ::PROTOBUF_NAMESPACE_ID::int32 field22() const;
  void set_field22(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field22() const;
  void _internal_set_field22(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool field23 = 23 [default = false];
  bool has_field23() const;
  private:
  bool _internal_has_field23() const;
  public:
  void clear_field23();
  bool field23() const;
  void set_field23(bool value);
  private:
  bool _internal_field23() const;
  void _internal_set_field23(bool value);
  public:

  // optional bool field206 = 206 [default = false];
  bool has_field206() const;
  private:
  bool _internal_has_field206() const;
  public:
  void clear_field206();
  bool field206() const;
  void set_field206(bool value);
  private:
  bool _internal_field206() const;
  void _internal_set_field206(bool value);
  public:

  // optional fixed32 field203 = 203;
  bool has_field203() const;
  private:
  bool _internal_has_field203() const;
  public:
  void clear_field203();
  ::PROTOBUF_NAMESPACE_ID::uint32 field203() const;
  void set_field203(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_field203() const;
  void _internal_set_field203(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 field204 = 204;
  bool has_field204() const;
  private:
  bool _internal_has_field204() const;
  public:
  void clear_field204();
  ::PROTOBUF_NAMESPACE_ID::int32 field204() const;
  void set_field204(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field204() const;
  void _internal_set_field204(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint64 field207 = 207;
  bool has_field207() const;
  private:
  bool _internal_has_field207() const;
  public:
  void clear_field207();
  ::PROTOBUF_NAMESPACE_ID::uint64 field207() const;
  void set_field207(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_field207() const;
  void _internal_set_field207(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 field300 = 300;
  bool has_field300() const;
  private:
  bool _internal_has_field300() const;
  public:
  void clear_field300();
  ::PROTOBUF_NAMESPACE_ID::uint64 field300() const;
  void set_field300(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_field300() const;
  void _internal_set_field300(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 field19 = 19 [default = 2];
  bool has_field19() const;
  private:
  bool _internal_has_field19() const;
  public:
  void clear_field19();
  ::PROTOBUF_NAMESPACE_ID::int32 field19() const;
  void set_field19(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_field19() const;
  void _internal_set_field19(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool field12 = 12 [default = true];
  bool has_field12() const;
  private:
  bool _internal_has_field12() const;
  public:
  void clear_field12();
  bool field12() const;
  void set_field12(bool value);
  private:
  bool _internal_field12() const;
  void _internal_set_field12(bool value);
  public:

  // optional bool field20 = 20 [default = true];
  bool has_field20() const;
  private:
  bool _internal_has_field20() const;
  public:
  void clear_field20();
  bool field20() const;
  void set_field20(bool value);
  private:
  bool _internal_field20() const;
  void _internal_set_field20(bool value);
  public:

  // optional bool field28 = 28 [default = true];
  bool has_field28() const;
  private:
  bool _internal_has_field28() const;
  public:
  void clear_field28();
  bool field28() const;
  void set_field28(bool value);
  private:
  bool _internal_field28() const;
  void _internal_set_field28(bool value);
  public:

  // @@protoc_insertion_point(class_scope:benchmarks.proto2.GoogleMessage1SubMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field15_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field205_;
  ::PROTOBUF_NAMESPACE_ID::int32 field1_;
  ::PROTOBUF_NAMESPACE_ID::int32 field2_;
  ::PROTOBUF_NAMESPACE_ID::int32 field3_;
  ::PROTOBUF_NAMESPACE_ID::int32 field16_;
  ::PROTOBUF_NAMESPACE_ID::int64 field13_;
  ::PROTOBUF_NAMESPACE_ID::int64 field14_;
  ::PROTOBUF_NAMESPACE_ID::uint64 field21_;
  ::PROTOBUF_NAMESPACE_ID::int32 field22_;
  bool field23_;
  bool field206_;
  ::PROTOBUF_NAMESPACE_ID::uint32 field203_;
  ::PROTOBUF_NAMESPACE_ID::int32 field204_;
  ::PROTOBUF_NAMESPACE_ID::uint64 field207_;
  ::PROTOBUF_NAMESPACE_ID::uint64 field300_;
  ::PROTOBUF_NAMESPACE_ID::int32 field19_;
  bool field12_;
  bool field20_;
  bool field28_;
  friend struct ::TableStruct_benchmark_5fmessage1_5fproto2_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GoogleMessage1

// required string field1 = 1;
inline bool GoogleMessage1::_internal_has_field1() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field1() const {
  return _internal_has_field1();
}
inline void GoogleMessage1::clear_field1() {
  field1_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GoogleMessage1::field1() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field1)
  return _internal_field1();
}
inline void GoogleMessage1::set_field1(const std::string& value) {
  _internal_set_field1(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field1)
}
inline std::string* GoogleMessage1::mutable_field1() {
  // @@protoc_insertion_point(field_mutable:benchmarks.proto2.GoogleMessage1.field1)
  return _internal_mutable_field1();
}
inline const std::string& GoogleMessage1::_internal_field1() const {
  return field1_.Get();
}
inline void GoogleMessage1::_internal_set_field1(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  field1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GoogleMessage1::set_field1(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  field1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:benchmarks.proto2.GoogleMessage1.field1)
}
inline void GoogleMessage1::set_field1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  field1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:benchmarks.proto2.GoogleMessage1.field1)
}
inline void GoogleMessage1::set_field1(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  field1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:benchmarks.proto2.GoogleMessage1.field1)
}
inline std::string* GoogleMessage1::_internal_mutable_field1() {
  _has_bits_[0] |= 0x00000001u;
  return field1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GoogleMessage1::release_field1() {
  // @@protoc_insertion_point(field_release:benchmarks.proto2.GoogleMessage1.field1)
  if (!_internal_has_field1()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return field1_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GoogleMessage1::set_allocated_field1(std::string* field1) {
  if (field1 != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  field1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:benchmarks.proto2.GoogleMessage1.field1)
}

// optional string field9 = 9;
inline bool GoogleMessage1::_internal_has_field9() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field9() const {
  return _internal_has_field9();
}
inline void GoogleMessage1::clear_field9() {
  field9_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& GoogleMessage1::field9() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field9)
  return _internal_field9();
}
inline void GoogleMessage1::set_field9(const std::string& value) {
  _internal_set_field9(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field9)
}
inline std::string* GoogleMessage1::mutable_field9() {
  // @@protoc_insertion_point(field_mutable:benchmarks.proto2.GoogleMessage1.field9)
  return _internal_mutable_field9();
}
inline const std::string& GoogleMessage1::_internal_field9() const {
  return field9_.Get();
}
inline void GoogleMessage1::_internal_set_field9(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  field9_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GoogleMessage1::set_field9(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  field9_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:benchmarks.proto2.GoogleMessage1.field9)
}
inline void GoogleMessage1::set_field9(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  field9_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:benchmarks.proto2.GoogleMessage1.field9)
}
inline void GoogleMessage1::set_field9(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  field9_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:benchmarks.proto2.GoogleMessage1.field9)
}
inline std::string* GoogleMessage1::_internal_mutable_field9() {
  _has_bits_[0] |= 0x00000008u;
  return field9_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GoogleMessage1::release_field9() {
  // @@protoc_insertion_point(field_release:benchmarks.proto2.GoogleMessage1.field9)
  if (!_internal_has_field9()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return field9_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GoogleMessage1::set_allocated_field9(std::string* field9) {
  if (field9 != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  field9_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field9,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:benchmarks.proto2.GoogleMessage1.field9)
}

// optional string field18 = 18;
inline bool GoogleMessage1::_internal_has_field18() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field18() const {
  return _internal_has_field18();
}
inline void GoogleMessage1::clear_field18() {
  field18_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& GoogleMessage1::field18() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field18)
  return _internal_field18();
}
inline void GoogleMessage1::set_field18(const std::string& value) {
  _internal_set_field18(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field18)
}
inline std::string* GoogleMessage1::mutable_field18() {
  // @@protoc_insertion_point(field_mutable:benchmarks.proto2.GoogleMessage1.field18)
  return _internal_mutable_field18();
}
inline const std::string& GoogleMessage1::_internal_field18() const {
  return field18_.Get();
}
inline void GoogleMessage1::_internal_set_field18(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  field18_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GoogleMessage1::set_field18(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  field18_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:benchmarks.proto2.GoogleMessage1.field18)
}
inline void GoogleMessage1::set_field18(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  field18_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:benchmarks.proto2.GoogleMessage1.field18)
}
inline void GoogleMessage1::set_field18(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  field18_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:benchmarks.proto2.GoogleMessage1.field18)
}
inline std::string* GoogleMessage1::_internal_mutable_field18() {
  _has_bits_[0] |= 0x00000010u;
  return field18_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GoogleMessage1::release_field18() {
  // @@protoc_insertion_point(field_release:benchmarks.proto2.GoogleMessage1.field18)
  if (!_internal_has_field18()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return field18_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GoogleMessage1::set_allocated_field18(std::string* field18) {
  if (field18 != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  field18_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field18,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:benchmarks.proto2.GoogleMessage1.field18)
}

// optional bool field80 = 80 [default = false];
inline bool GoogleMessage1::_internal_has_field80() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field80() const {
  return _internal_has_field80();
}
inline void GoogleMessage1::clear_field80() {
  field80_ = false;
  _has_bits_[0] &= ~0x00040000u;
}
inline bool GoogleMessage1::_internal_field80() const {
  return field80_;
}
inline bool GoogleMessage1::field80() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field80)
  return _internal_field80();
}
inline void GoogleMessage1::_internal_set_field80(bool value) {
  _has_bits_[0] |= 0x00040000u;
  field80_ = value;
}
inline void GoogleMessage1::set_field80(bool value) {
  _internal_set_field80(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field80)
}

// optional bool field81 = 81 [default = true];
inline bool GoogleMessage1::_internal_has_field81() const {
  bool value = (_has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field81() const {
  return _internal_has_field81();
}
inline void GoogleMessage1::clear_field81() {
  field81_ = true;
  _has_bits_[1] &= ~0x00000004u;
}
inline bool GoogleMessage1::_internal_field81() const {
  return field81_;
}
inline bool GoogleMessage1::field81() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field81)
  return _internal_field81();
}
inline void GoogleMessage1::_internal_set_field81(bool value) {
  _has_bits_[1] |= 0x00000004u;
  field81_ = value;
}
inline void GoogleMessage1::set_field81(bool value) {
  _internal_set_field81(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field81)
}

// required int32 field2 = 2;
inline bool GoogleMessage1::_internal_has_field2() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field2() const {
  return _internal_has_field2();
}
inline void GoogleMessage1::clear_field2() {
  field2_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field2() const {
  return field2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field2() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field2)
  return _internal_field2();
}
inline void GoogleMessage1::_internal_set_field2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  field2_ = value;
}
inline void GoogleMessage1::set_field2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field2(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field2)
}

// required int32 field3 = 3;
inline bool GoogleMessage1::_internal_has_field3() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field3() const {
  return _internal_has_field3();
}
inline void GoogleMessage1::clear_field3() {
  field3_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field3() const {
  return field3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field3() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field3)
  return _internal_field3();
}
inline void GoogleMessage1::_internal_set_field3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  field3_ = value;
}
inline void GoogleMessage1::set_field3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field3(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field3)
}

// optional int32 field280 = 280;
inline bool GoogleMessage1::_internal_has_field280() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field280() const {
  return _internal_has_field280();
}
inline void GoogleMessage1::clear_field280() {
  field280_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field280() const {
  return field280_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field280() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field280)
  return _internal_field280();
}
inline void GoogleMessage1::_internal_set_field280(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00010000u;
  field280_ = value;
}
inline void GoogleMessage1::set_field280(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field280(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field280)
}

// optional int32 field6 = 6 [default = 0];
inline bool GoogleMessage1::_internal_has_field6() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field6() const {
  return _internal_has_field6();
}
inline void GoogleMessage1::clear_field6() {
  field6_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field6() const {
  return field6_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field6() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field6)
  return _internal_field6();
}
inline void GoogleMessage1::_internal_set_field6(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  field6_ = value;
}
inline void GoogleMessage1::set_field6(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field6(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field6)
}

// optional int64 field22 = 22;
inline bool GoogleMessage1::_internal_has_field22() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field22() const {
  return _internal_has_field22();
}
inline void GoogleMessage1::clear_field22() {
  field22_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GoogleMessage1::_internal_field22() const {
  return field22_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GoogleMessage1::field22() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field22)
  return _internal_field22();
}
inline void GoogleMessage1::_internal_set_field22(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00002000u;
  field22_ = value;
}
inline void GoogleMessage1::set_field22(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_field22(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field22)
}

// optional string field4 = 4;
inline bool GoogleMessage1::_internal_has_field4() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field4() const {
  return _internal_has_field4();
}
inline void GoogleMessage1::clear_field4() {
  field4_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GoogleMessage1::field4() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field4)
  return _internal_field4();
}
inline void GoogleMessage1::set_field4(const std::string& value) {
  _internal_set_field4(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field4)
}
inline std::string* GoogleMessage1::mutable_field4() {
  // @@protoc_insertion_point(field_mutable:benchmarks.proto2.GoogleMessage1.field4)
  return _internal_mutable_field4();
}
inline const std::string& GoogleMessage1::_internal_field4() const {
  return field4_.Get();
}
inline void GoogleMessage1::_internal_set_field4(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  field4_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GoogleMessage1::set_field4(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  field4_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:benchmarks.proto2.GoogleMessage1.field4)
}
inline void GoogleMessage1::set_field4(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  field4_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:benchmarks.proto2.GoogleMessage1.field4)
}
inline void GoogleMessage1::set_field4(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  field4_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:benchmarks.proto2.GoogleMessage1.field4)
}
inline std::string* GoogleMessage1::_internal_mutable_field4() {
  _has_bits_[0] |= 0x00000002u;
  return field4_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GoogleMessage1::release_field4() {
  // @@protoc_insertion_point(field_release:benchmarks.proto2.GoogleMessage1.field4)
  if (!_internal_has_field4()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return field4_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GoogleMessage1::set_allocated_field4(std::string* field4) {
  if (field4 != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  field4_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field4,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:benchmarks.proto2.GoogleMessage1.field4)
}

// repeated fixed64 field5 = 5;
inline int GoogleMessage1::_internal_field5_size() const {
  return field5_.size();
}
inline int GoogleMessage1::field5_size() const {
  return _internal_field5_size();
}
inline void GoogleMessage1::clear_field5() {
  field5_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GoogleMessage1::_internal_field5(int index) const {
  return field5_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GoogleMessage1::field5(int index) const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field5)
  return _internal_field5(index);
}
inline void GoogleMessage1::set_field5(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  field5_.Set(index, value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field5)
}
inline void GoogleMessage1::_internal_add_field5(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  field5_.Add(value);
}
inline void GoogleMessage1::add_field5(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_field5(value);
  // @@protoc_insertion_point(field_add:benchmarks.proto2.GoogleMessage1.field5)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
GoogleMessage1::_internal_field5() const {
  return field5_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
GoogleMessage1::field5() const {
  // @@protoc_insertion_point(field_list:benchmarks.proto2.GoogleMessage1.field5)
  return _internal_field5();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
GoogleMessage1::_internal_mutable_field5() {
  return &field5_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
GoogleMessage1::mutable_field5() {
  // @@protoc_insertion_point(field_mutable_list:benchmarks.proto2.GoogleMessage1.field5)
  return _internal_mutable_field5();
}

// optional bool field59 = 59 [default = false];
inline bool GoogleMessage1::_internal_has_field59() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field59() const {
  return _internal_has_field59();
}
inline void GoogleMessage1::clear_field59() {
  field59_ = false;
  _has_bits_[0] &= ~0x00080000u;
}
inline bool GoogleMessage1::_internal_field59() const {
  return field59_;
}
inline bool GoogleMessage1::field59() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field59)
  return _internal_field59();
}
inline void GoogleMessage1::_internal_set_field59(bool value) {
  _has_bits_[0] |= 0x00080000u;
  field59_ = value;
}
inline void GoogleMessage1::set_field59(bool value) {
  _internal_set_field59(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field59)
}

// optional string field7 = 7;
inline bool GoogleMessage1::_internal_has_field7() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field7() const {
  return _internal_has_field7();
}
inline void GoogleMessage1::clear_field7() {
  field7_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& GoogleMessage1::field7() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field7)
  return _internal_field7();
}
inline void GoogleMessage1::set_field7(const std::string& value) {
  _internal_set_field7(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field7)
}
inline std::string* GoogleMessage1::mutable_field7() {
  // @@protoc_insertion_point(field_mutable:benchmarks.proto2.GoogleMessage1.field7)
  return _internal_mutable_field7();
}
inline const std::string& GoogleMessage1::_internal_field7() const {
  return field7_.Get();
}
inline void GoogleMessage1::_internal_set_field7(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  field7_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GoogleMessage1::set_field7(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  field7_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:benchmarks.proto2.GoogleMessage1.field7)
}
inline void GoogleMessage1::set_field7(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  field7_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:benchmarks.proto2.GoogleMessage1.field7)
}
inline void GoogleMessage1::set_field7(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  field7_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:benchmarks.proto2.GoogleMessage1.field7)
}
inline std::string* GoogleMessage1::_internal_mutable_field7() {
  _has_bits_[0] |= 0x00000004u;
  return field7_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GoogleMessage1::release_field7() {
  // @@protoc_insertion_point(field_release:benchmarks.proto2.GoogleMessage1.field7)
  if (!_internal_has_field7()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return field7_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GoogleMessage1::set_allocated_field7(std::string* field7) {
  if (field7 != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  field7_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field7,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:benchmarks.proto2.GoogleMessage1.field7)
}

// optional int32 field16 = 16;
inline bool GoogleMessage1::_internal_has_field16() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field16() const {
  return _internal_has_field16();
}
inline void GoogleMessage1::clear_field16() {
  field16_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field16() const {
  return field16_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field16() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field16)
  return _internal_field16();
}
inline void GoogleMessage1::_internal_set_field16(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  field16_ = value;
}
inline void GoogleMessage1::set_field16(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field16(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field16)
}

// optional int32 field130 = 130 [default = 0];
inline bool GoogleMessage1::_internal_has_field130() const {
  bool value = (_has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field130() const {
  return _internal_has_field130();
}
inline void GoogleMessage1::clear_field130() {
  field130_ = 0;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field130() const {
  return field130_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field130() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field130)
  return _internal_field130();
}
inline void GoogleMessage1::_internal_set_field130(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x20000000u;
  field130_ = value;
}
inline void GoogleMessage1::set_field130(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field130(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field130)
}

// optional bool field12 = 12 [default = true];
inline bool GoogleMessage1::_internal_has_field12() const {
  bool value = (_has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field12() const {
  return _internal_has_field12();
}
inline void GoogleMessage1::clear_field12() {
  field12_ = true;
  _has_bits_[1] &= ~0x00000008u;
}
inline bool GoogleMessage1::_internal_field12() const {
  return field12_;
}
inline bool GoogleMessage1::field12() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field12)
  return _internal_field12();
}
inline void GoogleMessage1::_internal_set_field12(bool value) {
  _has_bits_[1] |= 0x00000008u;
  field12_ = value;
}
inline void GoogleMessage1::set_field12(bool value) {
  _internal_set_field12(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field12)
}

// optional bool field17 = 17 [default = true];
inline bool GoogleMessage1::_internal_has_field17() const {
  bool value = (_has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field17() const {
  return _internal_has_field17();
}
inline void GoogleMessage1::clear_field17() {
  field17_ = true;
  _has_bits_[1] &= ~0x00000010u;
}
inline bool GoogleMessage1::_internal_field17() const {
  return field17_;
}
inline bool GoogleMessage1::field17() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field17)
  return _internal_field17();
}
inline void GoogleMessage1::_internal_set_field17(bool value) {
  _has_bits_[1] |= 0x00000010u;
  field17_ = value;
}
inline void GoogleMessage1::set_field17(bool value) {
  _internal_set_field17(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field17)
}

// optional bool field13 = 13 [default = true];
inline bool GoogleMessage1::_internal_has_field13() const {
  bool value = (_has_bits_[1] & 0x00000020u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field13() const {
  return _internal_has_field13();
}
inline void GoogleMessage1::clear_field13() {
  field13_ = true;
  _has_bits_[1] &= ~0x00000020u;
}
inline bool GoogleMessage1::_internal_field13() const {
  return field13_;
}
inline bool GoogleMessage1::field13() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field13)
  return _internal_field13();
}
inline void GoogleMessage1::_internal_set_field13(bool value) {
  _has_bits_[1] |= 0x00000020u;
  field13_ = value;
}
inline void GoogleMessage1::set_field13(bool value) {
  _internal_set_field13(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field13)
}

// optional bool field14 = 14 [default = true];
inline bool GoogleMessage1::_internal_has_field14() const {
  bool value = (_has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field14() const {
  return _internal_has_field14();
}
inline void GoogleMessage1::clear_field14() {
  field14_ = true;
  _has_bits_[1] &= ~0x00000002u;
}
inline bool GoogleMessage1::_internal_field14() const {
  return field14_;
}
inline bool GoogleMessage1::field14() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field14)
  return _internal_field14();
}
inline void GoogleMessage1::_internal_set_field14(bool value) {
  _has_bits_[1] |= 0x00000002u;
  field14_ = value;
}
inline void GoogleMessage1::set_field14(bool value) {
  _internal_set_field14(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field14)
}

// optional int32 field104 = 104 [default = 0];
inline bool GoogleMessage1::_internal_has_field104() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field104() const {
  return _internal_has_field104();
}
inline void GoogleMessage1::clear_field104() {
  field104_ = 0;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field104() const {
  return field104_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field104() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field104)
  return _internal_field104();
}
inline void GoogleMessage1::_internal_set_field104(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x08000000u;
  field104_ = value;
}
inline void GoogleMessage1::set_field104(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field104(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field104)
}

// optional int32 field100 = 100 [default = 0];
inline bool GoogleMessage1::_internal_has_field100() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field100() const {
  return _internal_has_field100();
}
inline void GoogleMessage1::clear_field100() {
  field100_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field100() const {
  return field100_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field100() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field100)
  return _internal_field100();
}
inline void GoogleMessage1::_internal_set_field100(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x02000000u;
  field100_ = value;
}
inline void GoogleMessage1::set_field100(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field100(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field100)
}

// optional int32 field101 = 101 [default = 0];
inline bool GoogleMessage1::_internal_has_field101() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field101() const {
  return _internal_has_field101();
}
inline void GoogleMessage1::clear_field101() {
  field101_ = 0;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field101() const {
  return field101_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field101() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field101)
  return _internal_field101();
}
inline void GoogleMessage1::_internal_set_field101(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x04000000u;
  field101_ = value;
}
inline void GoogleMessage1::set_field101(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field101(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field101)
}

// optional string field102 = 102;
inline bool GoogleMessage1::_internal_has_field102() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field102() const {
  return _internal_has_field102();
}
inline void GoogleMessage1::clear_field102() {
  field102_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& GoogleMessage1::field102() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field102)
  return _internal_field102();
}
inline void GoogleMessage1::set_field102(const std::string& value) {
  _internal_set_field102(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field102)
}
inline std::string* GoogleMessage1::mutable_field102() {
  // @@protoc_insertion_point(field_mutable:benchmarks.proto2.GoogleMessage1.field102)
  return _internal_mutable_field102();
}
inline const std::string& GoogleMessage1::_internal_field102() const {
  return field102_.Get();
}
inline void GoogleMessage1::_internal_set_field102(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  field102_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GoogleMessage1::set_field102(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  field102_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:benchmarks.proto2.GoogleMessage1.field102)
}
inline void GoogleMessage1::set_field102(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  field102_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:benchmarks.proto2.GoogleMessage1.field102)
}
inline void GoogleMessage1::set_field102(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000020u;
  field102_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:benchmarks.proto2.GoogleMessage1.field102)
}
inline std::string* GoogleMessage1::_internal_mutable_field102() {
  _has_bits_[0] |= 0x00000020u;
  return field102_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GoogleMessage1::release_field102() {
  // @@protoc_insertion_point(field_release:benchmarks.proto2.GoogleMessage1.field102)
  if (!_internal_has_field102()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return field102_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GoogleMessage1::set_allocated_field102(std::string* field102) {
  if (field102 != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  field102_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field102,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:benchmarks.proto2.GoogleMessage1.field102)
}

// optional string field103 = 103;
inline bool GoogleMessage1::_internal_has_field103() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field103() const {
  return _internal_has_field103();
}
inline void GoogleMessage1::clear_field103() {
  field103_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& GoogleMessage1::field103() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field103)
  return _internal_field103();
}
inline void GoogleMessage1::set_field103(const std::string& value) {
  _internal_set_field103(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field103)
}
inline std::string* GoogleMessage1::mutable_field103() {
  // @@protoc_insertion_point(field_mutable:benchmarks.proto2.GoogleMessage1.field103)
  return _internal_mutable_field103();
}
inline const std::string& GoogleMessage1::_internal_field103() const {
  return field103_.Get();
}
inline void GoogleMessage1::_internal_set_field103(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  field103_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GoogleMessage1::set_field103(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  field103_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:benchmarks.proto2.GoogleMessage1.field103)
}
inline void GoogleMessage1::set_field103(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  field103_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:benchmarks.proto2.GoogleMessage1.field103)
}
inline void GoogleMessage1::set_field103(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000040u;
  field103_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:benchmarks.proto2.GoogleMessage1.field103)
}
inline std::string* GoogleMessage1::_internal_mutable_field103() {
  _has_bits_[0] |= 0x00000040u;
  return field103_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GoogleMessage1::release_field103() {
  // @@protoc_insertion_point(field_release:benchmarks.proto2.GoogleMessage1.field103)
  if (!_internal_has_field103()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return field103_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GoogleMessage1::set_allocated_field103(std::string* field103) {
  if (field103 != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  field103_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field103,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:benchmarks.proto2.GoogleMessage1.field103)
}

// optional int32 field29 = 29 [default = 0];
inline bool GoogleMessage1::_internal_has_field29() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field29() const {
  return _internal_has_field29();
}
inline void GoogleMessage1::clear_field29() {
  field29_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field29() const {
  return field29_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field29() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field29)
  return _internal_field29();
}
inline void GoogleMessage1::_internal_set_field29(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00020000u;
  field29_ = value;
}
inline void GoogleMessage1::set_field29(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field29(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field29)
}

// optional bool field30 = 30 [default = false];
inline bool GoogleMessage1::_internal_has_field30() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field30() const {
  return _internal_has_field30();
}
inline void GoogleMessage1::clear_field30() {
  field30_ = false;
  _has_bits_[0] &= ~0x00100000u;
}
inline bool GoogleMessage1::_internal_field30() const {
  return field30_;
}
inline bool GoogleMessage1::field30() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field30)
  return _internal_field30();
}
inline void GoogleMessage1::_internal_set_field30(bool value) {
  _has_bits_[0] |= 0x00100000u;
  field30_ = value;
}
inline void GoogleMessage1::set_field30(bool value) {
  _internal_set_field30(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field30)
}

// optional int32 field60 = 60 [default = -1];
inline bool GoogleMessage1::_internal_has_field60() const {
  bool value = (_has_bits_[1] & 0x00000040u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field60() const {
  return _internal_has_field60();
}
inline void GoogleMessage1::clear_field60() {
  field60_ = -1;
  _has_bits_[1] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field60() const {
  return field60_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field60() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field60)
  return _internal_field60();
}
inline void GoogleMessage1::_internal_set_field60(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000040u;
  field60_ = value;
}
inline void GoogleMessage1::set_field60(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field60(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field60)
}

// optional int32 field271 = 271 [default = -1];
inline bool GoogleMessage1::_internal_has_field271() const {
  bool value = (_has_bits_[1] & 0x00000080u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field271() const {
  return _internal_has_field271();
}
inline void GoogleMessage1::clear_field271() {
  field271_ = -1;
  _has_bits_[1] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field271() const {
  return field271_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field271() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field271)
  return _internal_field271();
}
inline void GoogleMessage1::_internal_set_field271(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000080u;
  field271_ = value;
}
inline void GoogleMessage1::set_field271(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field271(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field271)
}

// optional int32 field272 = 272 [default = -1];
inline bool GoogleMessage1::_internal_has_field272() const {
  bool value = (_has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field272() const {
  return _internal_has_field272();
}
inline void GoogleMessage1::clear_field272() {
  field272_ = -1;
  _has_bits_[1] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field272() const {
  return field272_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field272() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field272)
  return _internal_field272();
}
inline void GoogleMessage1::_internal_set_field272(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000001u;
  field272_ = value;
}
inline void GoogleMessage1::set_field272(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field272(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field272)
}

// optional int32 field150 = 150;
inline bool GoogleMessage1::_internal_has_field150() const {
  bool value = (_has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field150() const {
  return _internal_has_field150();
}
inline void GoogleMessage1::clear_field150() {
  field150_ = 0;
  _has_bits_[0] &= ~0x80000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field150() const {
  return field150_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field150() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field150)
  return _internal_field150();
}
inline void GoogleMessage1::_internal_set_field150(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x80000000u;
  field150_ = value;
}
inline void GoogleMessage1::set_field150(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field150(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field150)
}

// optional int32 field23 = 23 [default = 0];
inline bool GoogleMessage1::_internal_has_field23() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field23() const {
  return _internal_has_field23();
}
inline void GoogleMessage1::clear_field23() {
  field23_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field23() const {
  return field23_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field23() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field23)
  return _internal_field23();
}
inline void GoogleMessage1::_internal_set_field23(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  field23_ = value;
}
inline void GoogleMessage1::set_field23(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field23(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field23)
}

// optional bool field24 = 24 [default = false];
inline bool GoogleMessage1::_internal_has_field24() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field24() const {
  return _internal_has_field24();
}
inline void GoogleMessage1::clear_field24() {
  field24_ = false;
  _has_bits_[0] &= ~0x00200000u;
}
inline bool GoogleMessage1::_internal_field24() const {
  return field24_;
}
inline bool GoogleMessage1::field24() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field24)
  return _internal_field24();
}
inline void GoogleMessage1::_internal_set_field24(bool value) {
  _has_bits_[0] |= 0x00200000u;
  field24_ = value;
}
inline void GoogleMessage1::set_field24(bool value) {
  _internal_set_field24(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field24)
}

// optional int32 field25 = 25 [default = 0];
inline bool GoogleMessage1::_internal_has_field25() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field25() const {
  return _internal_has_field25();
}
inline void GoogleMessage1::clear_field25() {
  field25_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field25() const {
  return field25_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field25() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field25)
  return _internal_field25();
}
inline void GoogleMessage1::_internal_set_field25(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00008000u;
  field25_ = value;
}
inline void GoogleMessage1::set_field25(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field25(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field25)
}

// optional .benchmarks.proto2.GoogleMessage1SubMessage field15 = 15;
inline bool GoogleMessage1::_internal_has_field15() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || field15_ != nullptr);
  return value;
}
inline bool GoogleMessage1::has_field15() const {
  return _internal_has_field15();
}
inline void GoogleMessage1::clear_field15() {
  if (field15_ != nullptr) field15_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
inline const ::benchmarks::proto2::GoogleMessage1SubMessage& GoogleMessage1::_internal_field15() const {
  const ::benchmarks::proto2::GoogleMessage1SubMessage* p = field15_;
  return p != nullptr ? *p : reinterpret_cast<const ::benchmarks::proto2::GoogleMessage1SubMessage&>(
      ::benchmarks::proto2::_GoogleMessage1SubMessage_default_instance_);
}
inline const ::benchmarks::proto2::GoogleMessage1SubMessage& GoogleMessage1::field15() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field15)
  return _internal_field15();
}
inline void GoogleMessage1::unsafe_arena_set_allocated_field15(
    ::benchmarks::proto2::GoogleMessage1SubMessage* field15) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(field15_);
  }
  field15_ = field15;
  if (field15) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:benchmarks.proto2.GoogleMessage1.field15)
}
inline ::benchmarks::proto2::GoogleMessage1SubMessage* GoogleMessage1::release_field15() {
  _has_bits_[0] &= ~0x00000100u;
  ::benchmarks::proto2::GoogleMessage1SubMessage* temp = field15_;
  field15_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::benchmarks::proto2::GoogleMessage1SubMessage* GoogleMessage1::unsafe_arena_release_field15() {
  // @@protoc_insertion_point(field_release:benchmarks.proto2.GoogleMessage1.field15)
  _has_bits_[0] &= ~0x00000100u;
  ::benchmarks::proto2::GoogleMessage1SubMessage* temp = field15_;
  field15_ = nullptr;
  return temp;
}
inline ::benchmarks::proto2::GoogleMessage1SubMessage* GoogleMessage1::_internal_mutable_field15() {
  _has_bits_[0] |= 0x00000100u;
  if (field15_ == nullptr) {
    auto* p = CreateMaybeMessage<::benchmarks::proto2::GoogleMessage1SubMessage>(GetArena());
    field15_ = p;
  }
  return field15_;
}
inline ::benchmarks::proto2::GoogleMessage1SubMessage* GoogleMessage1::mutable_field15() {
  // @@protoc_insertion_point(field_mutable:benchmarks.proto2.GoogleMessage1.field15)
  return _internal_mutable_field15();
}
inline void GoogleMessage1::set_allocated_field15(::benchmarks::proto2::GoogleMessage1SubMessage* field15) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete field15_;
  }
  if (field15) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(field15);
    if (message_arena != submessage_arena) {
      field15 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, field15, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  field15_ = field15;
  // @@protoc_insertion_point(field_set_allocated:benchmarks.proto2.GoogleMessage1.field15)
}

// optional bool field78 = 78;
inline bool GoogleMessage1::_internal_has_field78() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field78() const {
  return _internal_has_field78();
}
inline void GoogleMessage1::clear_field78() {
  field78_ = false;
  _has_bits_[0] &= ~0x01000000u;
}
inline bool GoogleMessage1::_internal_field78() const {
  return field78_;
}
inline bool GoogleMessage1::field78() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field78)
  return _internal_field78();
}
inline void GoogleMessage1::_internal_set_field78(bool value) {
  _has_bits_[0] |= 0x01000000u;
  field78_ = value;
}
inline void GoogleMessage1::set_field78(bool value) {
  _internal_set_field78(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field78)
}

// optional int32 field67 = 67 [default = 0];
inline bool GoogleMessage1::_internal_has_field67() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field67() const {
  return _internal_has_field67();
}
inline void GoogleMessage1::clear_field67() {
  field67_ = 0;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field67() const {
  return field67_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field67() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field67)
  return _internal_field67();
}
inline void GoogleMessage1::_internal_set_field67(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00400000u;
  field67_ = value;
}
inline void GoogleMessage1::set_field67(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field67(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field67)
}

// optional int32 field68 = 68;
inline bool GoogleMessage1::_internal_has_field68() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field68() const {
  return _internal_has_field68();
}
inline void GoogleMessage1::clear_field68() {
  field68_ = 0;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field68() const {
  return field68_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field68() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field68)
  return _internal_field68();
}
inline void GoogleMessage1::_internal_set_field68(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00800000u;
  field68_ = value;
}
inline void GoogleMessage1::set_field68(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field68(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field68)
}

// optional int32 field128 = 128 [default = 0];
inline bool GoogleMessage1::_internal_has_field128() const {
  bool value = (_has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field128() const {
  return _internal_has_field128();
}
inline void GoogleMessage1::clear_field128() {
  field128_ = 0;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field128() const {
  return field128_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field128() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field128)
  return _internal_field128();
}
inline void GoogleMessage1::_internal_set_field128(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x10000000u;
  field128_ = value;
}
inline void GoogleMessage1::set_field128(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field128(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field128)
}

// optional string field129 = 129 [default = "xxxxxxxxxxxxxxxxxxxxx"];
inline bool GoogleMessage1::_internal_has_field129() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field129() const {
  return _internal_has_field129();
}
inline void GoogleMessage1::clear_field129() {
  field129_.ClearToDefault(::benchmarks::proto2::GoogleMessage1::_i_give_permission_to_break_this_code_default_field129_, GetArena());
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& GoogleMessage1::field129() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field129)
  if (field129_.IsDefault(nullptr)) return _i_give_permission_to_break_this_code_default_field129_.get();
  return _internal_field129();
}
inline void GoogleMessage1::set_field129(const std::string& value) {
  _internal_set_field129(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field129)
}
inline std::string* GoogleMessage1::mutable_field129() {
  // @@protoc_insertion_point(field_mutable:benchmarks.proto2.GoogleMessage1.field129)
  return _internal_mutable_field129();
}
inline const std::string& GoogleMessage1::_internal_field129() const {
  return field129_.Get();
}
inline void GoogleMessage1::_internal_set_field129(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  field129_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::NonEmptyDefault{}, value, GetArena());
}
inline void GoogleMessage1::set_field129(std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  field129_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::NonEmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:benchmarks.proto2.GoogleMessage1.field129)
}
inline void GoogleMessage1::set_field129(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  field129_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::NonEmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:benchmarks.proto2.GoogleMessage1.field129)
}
inline void GoogleMessage1::set_field129(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000080u;
  field129_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::NonEmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:benchmarks.proto2.GoogleMessage1.field129)
}
inline std::string* GoogleMessage1::_internal_mutable_field129() {
  _has_bits_[0] |= 0x00000080u;
  return field129_.Mutable(::benchmarks::proto2::GoogleMessage1::_i_give_permission_to_break_this_code_default_field129_, GetArena());
}
inline std::string* GoogleMessage1::release_field129() {
  // @@protoc_insertion_point(field_release:benchmarks.proto2.GoogleMessage1.field129)
  if (!_internal_has_field129()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return field129_.ReleaseNonDefault(nullptr, GetArena());
}
inline void GoogleMessage1::set_allocated_field129(std::string* field129) {
  if (field129 != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  field129_.SetAllocated(nullptr, field129,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:benchmarks.proto2.GoogleMessage1.field129)
}

// optional int32 field131 = 131 [default = 0];
inline bool GoogleMessage1::_internal_has_field131() const {
  bool value = (_has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline bool GoogleMessage1::has_field131() const {
  return _internal_has_field131();
}
inline void GoogleMessage1::clear_field131() {
  field131_ = 0;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::_internal_field131() const {
  return field131_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1::field131() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1.field131)
  return _internal_field131();
}
inline void GoogleMessage1::_internal_set_field131(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x40000000u;
  field131_ = value;
}
inline void GoogleMessage1::set_field131(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field131(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1.field131)
}

// -------------------------------------------------------------------

// GoogleMessage1SubMessage

// optional int32 field1 = 1 [default = 0];
inline bool GoogleMessage1SubMessage::_internal_has_field1() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field1() const {
  return _internal_has_field1();
}
inline void GoogleMessage1SubMessage::clear_field1() {
  field1_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::_internal_field1() const {
  return field1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::field1() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field1)
  return _internal_field1();
}
inline void GoogleMessage1SubMessage::_internal_set_field1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  field1_ = value;
}
inline void GoogleMessage1SubMessage::set_field1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field1(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field1)
}

// optional int32 field2 = 2 [default = 0];
inline bool GoogleMessage1SubMessage::_internal_has_field2() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field2() const {
  return _internal_has_field2();
}
inline void GoogleMessage1SubMessage::clear_field2() {
  field2_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::_internal_field2() const {
  return field2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::field2() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field2)
  return _internal_field2();
}
inline void GoogleMessage1SubMessage::_internal_set_field2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  field2_ = value;
}
inline void GoogleMessage1SubMessage::set_field2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field2(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field2)
}

// optional int32 field3 = 3 [default = 0];
inline bool GoogleMessage1SubMessage::_internal_has_field3() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field3() const {
  return _internal_has_field3();
}
inline void GoogleMessage1SubMessage::clear_field3() {
  field3_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::_internal_field3() const {
  return field3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::field3() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field3)
  return _internal_field3();
}
inline void GoogleMessage1SubMessage::_internal_set_field3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  field3_ = value;
}
inline void GoogleMessage1SubMessage::set_field3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field3(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field3)
}

// optional string field15 = 15;
inline bool GoogleMessage1SubMessage::_internal_has_field15() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field15() const {
  return _internal_has_field15();
}
inline void GoogleMessage1SubMessage::clear_field15() {
  field15_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GoogleMessage1SubMessage::field15() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field15)
  return _internal_field15();
}
inline void GoogleMessage1SubMessage::set_field15(const std::string& value) {
  _internal_set_field15(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field15)
}
inline std::string* GoogleMessage1SubMessage::mutable_field15() {
  // @@protoc_insertion_point(field_mutable:benchmarks.proto2.GoogleMessage1SubMessage.field15)
  return _internal_mutable_field15();
}
inline const std::string& GoogleMessage1SubMessage::_internal_field15() const {
  return field15_.Get();
}
inline void GoogleMessage1SubMessage::_internal_set_field15(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  field15_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GoogleMessage1SubMessage::set_field15(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  field15_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:benchmarks.proto2.GoogleMessage1SubMessage.field15)
}
inline void GoogleMessage1SubMessage::set_field15(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  field15_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:benchmarks.proto2.GoogleMessage1SubMessage.field15)
}
inline void GoogleMessage1SubMessage::set_field15(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  field15_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:benchmarks.proto2.GoogleMessage1SubMessage.field15)
}
inline std::string* GoogleMessage1SubMessage::_internal_mutable_field15() {
  _has_bits_[0] |= 0x00000001u;
  return field15_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GoogleMessage1SubMessage::release_field15() {
  // @@protoc_insertion_point(field_release:benchmarks.proto2.GoogleMessage1SubMessage.field15)
  if (!_internal_has_field15()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return field15_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GoogleMessage1SubMessage::set_allocated_field15(std::string* field15) {
  if (field15 != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  field15_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field15,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:benchmarks.proto2.GoogleMessage1SubMessage.field15)
}

// optional bool field12 = 12 [default = true];
inline bool GoogleMessage1SubMessage::_internal_has_field12() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field12() const {
  return _internal_has_field12();
}
inline void GoogleMessage1SubMessage::clear_field12() {
  field12_ = true;
  _has_bits_[0] &= ~0x00020000u;
}
inline bool GoogleMessage1SubMessage::_internal_field12() const {
  return field12_;
}
inline bool GoogleMessage1SubMessage::field12() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field12)
  return _internal_field12();
}
inline void GoogleMessage1SubMessage::_internal_set_field12(bool value) {
  _has_bits_[0] |= 0x00020000u;
  field12_ = value;
}
inline void GoogleMessage1SubMessage::set_field12(bool value) {
  _internal_set_field12(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field12)
}

// optional int64 field13 = 13;
inline bool GoogleMessage1SubMessage::_internal_has_field13() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field13() const {
  return _internal_has_field13();
}
inline void GoogleMessage1SubMessage::clear_field13() {
  field13_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GoogleMessage1SubMessage::_internal_field13() const {
  return field13_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GoogleMessage1SubMessage::field13() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field13)
  return _internal_field13();
}
inline void GoogleMessage1SubMessage::_internal_set_field13(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  field13_ = value;
}
inline void GoogleMessage1SubMessage::set_field13(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_field13(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field13)
}

// optional int64 field14 = 14;
inline bool GoogleMessage1SubMessage::_internal_has_field14() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field14() const {
  return _internal_has_field14();
}
inline void GoogleMessage1SubMessage::clear_field14() {
  field14_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GoogleMessage1SubMessage::_internal_field14() const {
  return field14_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GoogleMessage1SubMessage::field14() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field14)
  return _internal_field14();
}
inline void GoogleMessage1SubMessage::_internal_set_field14(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  field14_ = value;
}
inline void GoogleMessage1SubMessage::set_field14(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_field14(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field14)
}

// optional int32 field16 = 16;
inline bool GoogleMessage1SubMessage::_internal_has_field16() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field16() const {
  return _internal_has_field16();
}
inline void GoogleMessage1SubMessage::clear_field16() {
  field16_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::_internal_field16() const {
  return field16_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::field16() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field16)
  return _internal_field16();
}
inline void GoogleMessage1SubMessage::_internal_set_field16(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  field16_ = value;
}
inline void GoogleMessage1SubMessage::set_field16(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field16(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field16)
}

// optional int32 field19 = 19 [default = 2];
inline bool GoogleMessage1SubMessage::_internal_has_field19() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field19() const {
  return _internal_has_field19();
}
inline void GoogleMessage1SubMessage::clear_field19() {
  field19_ = 2;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::_internal_field19() const {
  return field19_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::field19() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field19)
  return _internal_field19();
}
inline void GoogleMessage1SubMessage::_internal_set_field19(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00010000u;
  field19_ = value;
}
inline void GoogleMessage1SubMessage::set_field19(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field19(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field19)
}

// optional bool field20 = 20 [default = true];
inline bool GoogleMessage1SubMessage::_internal_has_field20() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field20() const {
  return _internal_has_field20();
}
inline void GoogleMessage1SubMessage::clear_field20() {
  field20_ = true;
  _has_bits_[0] &= ~0x00040000u;
}
inline bool GoogleMessage1SubMessage::_internal_field20() const {
  return field20_;
}
inline bool GoogleMessage1SubMessage::field20() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field20)
  return _internal_field20();
}
inline void GoogleMessage1SubMessage::_internal_set_field20(bool value) {
  _has_bits_[0] |= 0x00040000u;
  field20_ = value;
}
inline void GoogleMessage1SubMessage::set_field20(bool value) {
  _internal_set_field20(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field20)
}

// optional bool field28 = 28 [default = true];
inline bool GoogleMessage1SubMessage::_internal_has_field28() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field28() const {
  return _internal_has_field28();
}
inline void GoogleMessage1SubMessage::clear_field28() {
  field28_ = true;
  _has_bits_[0] &= ~0x00080000u;
}
inline bool GoogleMessage1SubMessage::_internal_field28() const {
  return field28_;
}
inline bool GoogleMessage1SubMessage::field28() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field28)
  return _internal_field28();
}
inline void GoogleMessage1SubMessage::_internal_set_field28(bool value) {
  _has_bits_[0] |= 0x00080000u;
  field28_ = value;
}
inline void GoogleMessage1SubMessage::set_field28(bool value) {
  _internal_set_field28(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field28)
}

// optional fixed64 field21 = 21;
inline bool GoogleMessage1SubMessage::_internal_has_field21() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field21() const {
  return _internal_has_field21();
}
inline void GoogleMessage1SubMessage::clear_field21() {
  field21_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GoogleMessage1SubMessage::_internal_field21() const {
  return field21_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GoogleMessage1SubMessage::field21() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field21)
  return _internal_field21();
}
inline void GoogleMessage1SubMessage::_internal_set_field21(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000100u;
  field21_ = value;
}
inline void GoogleMessage1SubMessage::set_field21(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_field21(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field21)
}

// optional int32 field22 = 22;
inline bool GoogleMessage1SubMessage::_internal_has_field22() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field22() const {
  return _internal_has_field22();
}
inline void GoogleMessage1SubMessage::clear_field22() {
  field22_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::_internal_field22() const {
  return field22_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::field22() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field22)
  return _internal_field22();
}
inline void GoogleMessage1SubMessage::_internal_set_field22(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  field22_ = value;
}
inline void GoogleMessage1SubMessage::set_field22(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field22(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field22)
}

// optional bool field23 = 23 [default = false];
inline bool GoogleMessage1SubMessage::_internal_has_field23() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field23() const {
  return _internal_has_field23();
}
inline void GoogleMessage1SubMessage::clear_field23() {
  field23_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool GoogleMessage1SubMessage::_internal_field23() const {
  return field23_;
}
inline bool GoogleMessage1SubMessage::field23() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field23)
  return _internal_field23();
}
inline void GoogleMessage1SubMessage::_internal_set_field23(bool value) {
  _has_bits_[0] |= 0x00000400u;
  field23_ = value;
}
inline void GoogleMessage1SubMessage::set_field23(bool value) {
  _internal_set_field23(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field23)
}

// optional bool field206 = 206 [default = false];
inline bool GoogleMessage1SubMessage::_internal_has_field206() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field206() const {
  return _internal_has_field206();
}
inline void GoogleMessage1SubMessage::clear_field206() {
  field206_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool GoogleMessage1SubMessage::_internal_field206() const {
  return field206_;
}
inline bool GoogleMessage1SubMessage::field206() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field206)
  return _internal_field206();
}
inline void GoogleMessage1SubMessage::_internal_set_field206(bool value) {
  _has_bits_[0] |= 0x00000800u;
  field206_ = value;
}
inline void GoogleMessage1SubMessage::set_field206(bool value) {
  _internal_set_field206(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field206)
}

// optional fixed32 field203 = 203;
inline bool GoogleMessage1SubMessage::_internal_has_field203() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field203() const {
  return _internal_has_field203();
}
inline void GoogleMessage1SubMessage::clear_field203() {
  field203_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GoogleMessage1SubMessage::_internal_field203() const {
  return field203_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GoogleMessage1SubMessage::field203() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field203)
  return _internal_field203();
}
inline void GoogleMessage1SubMessage::_internal_set_field203(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  field203_ = value;
}
inline void GoogleMessage1SubMessage::set_field203(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_field203(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field203)
}

// optional int32 field204 = 204;
inline bool GoogleMessage1SubMessage::_internal_has_field204() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field204() const {
  return _internal_has_field204();
}
inline void GoogleMessage1SubMessage::clear_field204() {
  field204_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::_internal_field204() const {
  return field204_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoogleMessage1SubMessage::field204() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field204)
  return _internal_field204();
}
inline void GoogleMessage1SubMessage::_internal_set_field204(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  field204_ = value;
}
inline void GoogleMessage1SubMessage::set_field204(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_field204(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field204)
}

// optional string field205 = 205;
inline bool GoogleMessage1SubMessage::_internal_has_field205() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field205() const {
  return _internal_has_field205();
}
inline void GoogleMessage1SubMessage::clear_field205() {
  field205_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GoogleMessage1SubMessage::field205() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field205)
  return _internal_field205();
}
inline void GoogleMessage1SubMessage::set_field205(const std::string& value) {
  _internal_set_field205(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field205)
}
inline std::string* GoogleMessage1SubMessage::mutable_field205() {
  // @@protoc_insertion_point(field_mutable:benchmarks.proto2.GoogleMessage1SubMessage.field205)
  return _internal_mutable_field205();
}
inline const std::string& GoogleMessage1SubMessage::_internal_field205() const {
  return field205_.Get();
}
inline void GoogleMessage1SubMessage::_internal_set_field205(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  field205_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GoogleMessage1SubMessage::set_field205(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  field205_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:benchmarks.proto2.GoogleMessage1SubMessage.field205)
}
inline void GoogleMessage1SubMessage::set_field205(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  field205_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:benchmarks.proto2.GoogleMessage1SubMessage.field205)
}
inline void GoogleMessage1SubMessage::set_field205(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  field205_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:benchmarks.proto2.GoogleMessage1SubMessage.field205)
}
inline std::string* GoogleMessage1SubMessage::_internal_mutable_field205() {
  _has_bits_[0] |= 0x00000002u;
  return field205_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GoogleMessage1SubMessage::release_field205() {
  // @@protoc_insertion_point(field_release:benchmarks.proto2.GoogleMessage1SubMessage.field205)
  if (!_internal_has_field205()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return field205_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GoogleMessage1SubMessage::set_allocated_field205(std::string* field205) {
  if (field205 != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  field205_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field205,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:benchmarks.proto2.GoogleMessage1SubMessage.field205)
}

// optional uint64 field207 = 207;
inline bool GoogleMessage1SubMessage::_internal_has_field207() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field207() const {
  return _internal_has_field207();
}
inline void GoogleMessage1SubMessage::clear_field207() {
  field207_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GoogleMessage1SubMessage::_internal_field207() const {
  return field207_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GoogleMessage1SubMessage::field207() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field207)
  return _internal_field207();
}
inline void GoogleMessage1SubMessage::_internal_set_field207(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00004000u;
  field207_ = value;
}
inline void GoogleMessage1SubMessage::set_field207(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_field207(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field207)
}

// optional uint64 field300 = 300;
inline bool GoogleMessage1SubMessage::_internal_has_field300() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool GoogleMessage1SubMessage::has_field300() const {
  return _internal_has_field300();
}
inline void GoogleMessage1SubMessage::clear_field300() {
  field300_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GoogleMessage1SubMessage::_internal_field300() const {
  return field300_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GoogleMessage1SubMessage::field300() const {
  // @@protoc_insertion_point(field_get:benchmarks.proto2.GoogleMessage1SubMessage.field300)
  return _internal_field300();
}
inline void GoogleMessage1SubMessage::_internal_set_field300(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00008000u;
  field300_ = value;
}
inline void GoogleMessage1SubMessage::set_field300(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_field300(value);
  // @@protoc_insertion_point(field_set:benchmarks.proto2.GoogleMessage1SubMessage.field300)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto2
}  // namespace benchmarks

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_benchmark_5fmessage1_5fproto2_2eproto
